<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="202" passed="34" failed="32" skipped="136">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-26T09:54:24Z" name="Suite" finished-at="2025-06-26T09:55:27Z" duration-ms="63575">
    <groups>
    </groups>
    <test started-at="2025-06-26T09:54:24Z" name="Test" finished-at="2025-06-26T09:55:27Z" duration-ms="63575">
      <class name="com.menumitratCommonAPITestScript.verifyOTPTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@1da2cb77]" started-at="2025-06-26T15:24:54Z" name="setup" finished-at="2025-06-26T15:24:54Z" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyOTPAPiUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@1da2cb77]" started-at="2025-06-26T15:24:54Z" name="verifyOTPAPiUsingValidInputData" data-provider="getPositiveInputData" finished-at="2025-06-26T15:24:54Z" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[verifyotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verifyotp_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify OTP with valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "mobile": "6264335759", "otp": "1234", "fcm_token": "4578963547892", "device_id": "8974561234", "device_model": "Laptop 122" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "user_id": 2,
    "name": "Heena",
    "role": "owner",
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyIiwiZXhwIjoxNzQ2NTMxOTEyLCJpYXQiOjE3NDU5MjcxMTIsImp0aSI6Ijc5NzRmYzkwLTY1MDAtNGQ2OS1iMWRmLWQwNmIzOWFiNGZiZSIsInJvbGUiOiJvd25lciIsImRldmljZSI6Ijg5NzQ1NjEyMzR8TGFwdG9wIDEyMiJ9.bQ2RYiEhNDHHW6ZAx3CqKkLu3QVdAyIm6Qz49eE9BCA",
    "expires_at": "06 May 2025"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPAPiUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.verifyOTPTestScript -->
      <class name="com.menumitratCommonAPITestScript.OrderViewTestScript">
        <test-method is-config="true" signature="orderViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@20ccf40b]" started-at="2025-06-26T15:24:50Z" name="orderViewSetUp" finished-at="2025-06-26T15:24:50Z" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewSetUp -->
        <test-method signature="orderViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@20ccf40b]" started-at="2025-06-26T15:24:50Z" name="orderViewNegativeTest" data-provider="getOrderViewNegativeData" finished-at="2025-06-26T15:24:50Z" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order view using invorrect order id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "order_id": "10101",
    "order_number": "29"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewNegativeTest -->
        <test-method signature="orderViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@20ccf40b]" started-at="2025-06-26T15:24:50Z" name="orderViewNegativeTest" data-provider="getOrderViewNegativeData" finished-at="2025-06-26T15:24:50Z" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order view using incorrect order number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "order_id": "29",
    "order_number": "887"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewNegativeTest -->
        <test-method signature="orderViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@20ccf40b]" started-at="2025-06-26T15:24:50Z" name="orderViewTest" data-provider="getOrderViewData" finished-at="2025-06-26T15:24:50Z" duration-ms="83" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "order_id": "29",
    "order_number": "29"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in order view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in order view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.OrderViewTestScript.orderViewTest(OrderViewTestScript.java:222)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefDeleteTestScript@56cdfb3b]" started-at="2025-06-26T15:24:49Z" name="setup" finished-at="2025-06-26T15:24:49Z" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefDeleteTestScript@56cdfb3b]" started-at="2025-06-26T15:24:49Z" name="deleteChef" data-provider="getChefDeleteData" finished-at="2025-06-26T15:24:50Z" duration-ms="251" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":2,
 "user_id":14,
 "outlet_id":1,
 "app_source":"owner_app"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Chef deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.ChefDeleteTestScript.deleteChef(ChefDeleteTestScript.java:236)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetStaffListWithRole">
        <test-method is-config="true" signature="getStaffListWithRoleSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@3232a28a]" started-at="2025-06-26T15:24:43Z" name="getStaffListWithRoleSetUp" finished-at="2025-06-26T15:24:43Z" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleSetUp -->
        <test-method signature="getStaffListWithRoleTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@3232a28a]" started-at="2025-06-26T15:24:43Z" name="getStaffListWithRoleTest" data-provider="getStaffListWithRoleData" finished-at="2025-06-26T15:24:43Z" duration-ms="82" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getstafflistwithrole]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getstafflistwithrole_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify get staff list with role]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "staff_role":"receptionist"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "lists": [
        {
            "staff_id": 3,
            "name": "Jully",
            "mobile": "9833445579",
            "role": "receptionist",
            "photo": null
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff list with role test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff list with role test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.GetStaffListWithRole.getStaffListWithRoleTest(GetStaffListWithRole.java:232)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleTest -->
        <test-method signature="getStaffListWithRoleTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@3232a28a]" started-at="2025-06-26T15:24:43Z" name="getStaffListWithRoleTest" data-provider="getStaffListWithRoleData" finished-at="2025-06-26T15:24:43Z" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getstafflistwithrole]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getstafflistwithrole_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify get staff list with role using invalid outlet id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1010",
    "staff_role":"receptionist"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id does not exist."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetStaffListWithRole -->
      <class name="com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript">
        <test-method is-config="true" signature="orderListViewCdskdsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@e15b7e8]" started-at="2025-06-26T15:25:06Z" name="orderListViewCdskdsSetUp" finished-at="2025-06-26T15:25:06Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in order list view cdskds setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in order list view cdskds setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript.orderListViewCdskdsSetUp(OrderListViewCdskdsTestScript.java:89)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsSetUp -->
        <test-method signature="orderListViewCdskdsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@e15b7e8]" started-at="2025-06-26T15:25:06Z" name="orderListViewCdskdsNegativeTest" data-provider="getOrderListViewCdskdsNegativeData" finished-at="2025-06-26T15:25:06Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistviewcdskds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistviewcdskds_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order list view Cds kds using special character in outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "@"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "outlet_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsNegativeTest -->
        <test-method signature="orderListViewCdskdsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@e15b7e8]" started-at="2025-06-26T15:25:06Z" name="orderListViewCdskdsTest" data-provider="getOrderListViewCdskdsData" finished-at="2025-06-26T15:25:06Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistviewcdskds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistviewcdskds_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order list view Cds kds]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterUpdateTestScript">
        <test-method is-config="true" signature="waiterUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@306e95ec]" started-at="2025-06-26T15:25:04Z" name="waiterUpdateSetUp" finished-at="2025-06-26T15:25:04Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.waiterUpdateSetUp(WaiterUpdateTestScript.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateSetUp -->
        <test-method signature="verifyWaiterUpdate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@306e95ec]" started-at="2025-06-26T15:25:04Z" name="verifyWaiterUpdate" data-provider="getWaiterUpdateData" finished-at="2025-06-26T15:25:04Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":2,
 "user_id":124,
 "outlet_id":1,
 "name":"waitvaibhav",
 "mobile":"6746240984",
 "address":"satara",
 "aadhar_number":"343332322321",
 "dob":"12 Jan 2023",
 "email":"h@gmail.com",
 "functionality_ids":[1,2,3,4],
 "app_source":"waiter_app"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Waiter updated successfully",
    "data": {
        "user_id": 10,
        "name": "waitvaibhav"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterUpdate -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetVegOrNonVegList">
        <test-method is-config="true" signature="getVegOrNonVegListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetVegOrNonVegList@6cd28fa7]" started-at="2025-06-26T15:24:57Z" name="getVegOrNonVegListSetUp" finished-at="2025-06-26T15:24:57Z" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVegOrNonVegListSetUp -->
        <test-method signature="verifyVegOrNonVegList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetVegOrNonVegList@6cd28fa7]" started-at="2025-06-26T15:24:57Z" name="verifyVegOrNonVegList" data-provider="getVegOrNonVegListData" finished-at="2025-06-26T15:24:57Z" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getvegornonveglist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getvegornonveglist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Veg or non veg list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyVegOrNonVegList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetVegOrNonVegList -->
      <class name="com.menumitratCommonAPITestScript.StaffViewTestScript">
        <test-method is-config="true" signature="staffviewsetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@21e360a]" started-at="2025-06-26T15:25:03Z" name="staffviewsetUp" finished-at="2025-06-26T15:25:03Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.StaffViewTestScript.staffviewsetUp(StaffViewTestScript.java:187)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffviewsetUp -->
        <test-method signature="verifyStaffView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@21e360a]" started-at="2025-06-26T15:25:03Z" name="verifyStaffView" data-provider="getstaffviewValidData" finished-at="2025-06-26T15:25:03Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify staff view using valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "staff_id": 27,
    "outlet_id": 1,
    "user_id":2,
"app_source":"owner_app"                     
  
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Staff details retrieved successfully",
  "data": {
    "staff_id": 27,
    "outlet_id": 1,
    "name": "gggf",
    "mobile": "8886868686",
    "address": "null",
    "role": "receptionist",
    "dob": "04 May 2025",
    "aadhar_number": "677777555555",
    "photo": null,
    "created_by": "owner",
    "created_on": "21 May 2025 07:36:29 PM",
    "updated_by": null,
    "updated_on": null
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffView -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateTemplatesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@47faa49c]" started-at="2025-06-26T15:24:44Z" name="setup" finished-at="2025-06-26T15:24:44Z" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateTemplatesUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@47faa49c]" started-at="2025-06-26T15:24:44Z" name="updateTemplatesUsingValidInputData" data-provider="getUpdateTemplatesData" finished-at="2025-06-26T15:24:44Z" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatetemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ {
        "name": "Classic",
        "qr_overlay_position": "top",
        "template_id":3,
        "image_name": "C:\Users\hp\Downloads\pexels-pixabay-460672.jpg"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTemplatesUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@47faa49c]" started-at="2025-06-26T15:24:44Z" name="tearDown" finished-at="2025-06-26T15:24:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterCreateTestScript">
        <test-method is-config="true" signature="waiterCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@f736069]" started-at="2025-06-26T15:24:45Z" name="waiterCreateSetUp" finished-at="2025-06-26T15:24:45Z" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateSetUp -->
        <test-method signature="verifyWaiterCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@f736069]" started-at="2025-06-26T15:24:45Z" name="verifyWaiterCreate" data-provider="getWaiterCreateData" finished-at="2025-06-26T15:24:45Z" duration-ms="76" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waitercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waitercreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Waiter create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 
 "user_id":2,
 "outlet_id":1,
 "name":"waitvaibhav",
 "mobile":"8237090371",
 "address":"satara",
 "aadhar_number":"343332322321",
 "dob":"12 Jan 2023",
 "email":"h@gmail.com",
 "app_source":"waiter_app",
 "functionality_ids":[1,2,3,4,7]

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Waiter created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter create test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter create test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.WaiterCreateTestScript.verifyWaiterCreate(WaiterCreateTestScript.java:272)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterCreate -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ActivityLogTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@4d0f2471]" started-at="2025-06-26T15:24:41Z" name="setup" finished-at="2025-06-26T15:24:42Z" duration-ms="716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="activityLogTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@4d0f2471]" started-at="2025-06-26T15:24:42Z" name="activityLogTest" data-provider="getActivityLogData" finished-at="2025-06-26T15:24:42Z" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activitylog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activitylog_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verfiy Activity log]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": 2
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Activity logs retrieved successfully",
  "data": {
    "activity_logs": [
      {
        "activity_log_id": 67387,
        "role": "owner",
        "module": "Authentication",
        "sub_module": "OTP Verification",
        "title": "Heenann logged in successfully",
        "outlet_id": 0,
        "created_on": "08 Jun 2025 07:30 PM"
      },
      {
        "activity_log_id": 67386,
        "role": "owner",
        "module": "Authentication",
        "sub_module": "OTP Verification",
        "title": "Heenann logged in successfully",
        "outlet_id": 0,
        "created_on": "08 Jun 2025 07:30 PM"
      },
      {
        "activity_log_id": 67385,
        "role": "owner",
        "module": "Authentication",
        "sub_module": "OTP Verification",
        "title": "Heenann logged in successfully",
        "outlet_id": 0,
        "created_on": "08 Jun 2025 07:29 PM"
      },]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activityLogTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ActivityLogTestScript -->
      <class name="com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial">
        <test-method is-config="true" signature="makeMenuSpecialNonSpecialSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial@73e22a3d]" started-at="2025-06-26T15:24:43Z" name="makeMenuSpecialNonSpecialSetUp" finished-at="2025-06-26T15:24:43Z" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeMenuSpecialNonSpecialSetUp -->
        <test-method signature="makeMenuSpecialNonSpecialNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial@73e22a3d]" started-at="2025-06-26T15:24:43Z" name="makeMenuSpecialNonSpecialNegativeTest" data-provider="getMakeMenuSpecialNonSpecialNegativeData" finished-at="2025-06-26T15:24:43Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting Make Menu Special/Non-Special negative test data: No valid Make Menu Special/Non-Special negative test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting Make Menu Special/Non-Special negative test data: No valid Make Menu Special/Non-Special negative test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getting Make Menu Special/Non-Special negative test data: No valid Make Menu Special/Non-Special negative test data found after filtering
	at com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial.getMakeMenuSpecialNonSpecialNegativeData(MakeMenuSpecialNonSpecial.java:319)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeMenuSpecialNonSpecialNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@6253c26]" started-at="2025-06-26T15:25:22Z" name="setup" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript.setup(MenuCategoryCreateTestScript.java:163)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createMenuCategoryUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@6253c26]" started-at="2025-06-26T15:25:22Z" name="createMenuCategoryUsingValidInputData" data-provider="getMenuCategoryCreateData" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"category_name":"south Indian",
"image":"C:\Users\hp\Downloads\menus\medu vada.jpg",
"user_id": "2"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "success"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuCategoryUsingValidInputData -->
        <test-method signature="menuCategoryCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@6253c26]" started-at="2025-06-26T15:25:22Z" name="menuCategoryCreateNegativeTest" data-provider="getMenuCategoryCreateNegativeData" finished-at="2025-06-26T15:25:22Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorycreate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet ID in the request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"",
"category_name":"south Indian",
"image":"C:\Users\hp\Downloads\menus\medu vada.jpg",
"user_id": ""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryCreateNegativeTest -->
        <test-method signature="menuCategoryCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@6253c26]" started-at="2025-06-26T15:25:22Z" name="menuCategoryCreateNegativeTest" data-provider="getMenuCategoryCreateNegativeData" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorycreate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty category name in the request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"category_name":"",
"image":"C:\Users\hp\Downloads\menus\medu vada.jpg",
"user_id": "2"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Category name is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryCreateNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@6253c26]" started-at="2025-06-26T15:25:22Z" name="tearDown" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@48f278eb]" started-at="2025-06-26T15:24:54Z" name="setup" finished-at="2025-06-26T15:24:55Z" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="menuCategoryUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@48f278eb]" started-at="2025-06-26T15:24:55Z" name="menuCategoryUpdateNegativeTest" data-provider="getMenuCategoryUpdateNegativeData" finished-at="2025-06-26T15:24:55Z" duration-ms="69" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid menu_cat_id with missing or incorrect fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"menu_cat_id":"",
"user_id":"2",
"category_name":"Gujrati",
"food_type":"veg",
"image":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu_cat_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during menu category update negative test: Status code validation failed - Expected: 400, Actual: 500]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during menu category update negative test: Status code validation failed - Expected: 400, Actual: 500
	at com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript.menuCategoryUpdateNegativeTest(MenuCategoryUpdateTestScript.java:371)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryUpdateNegativeTest -->
        <test-method signature="menuCategoryUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@48f278eb]" started-at="2025-06-26T15:24:55Z" name="menuCategoryUpdateNegativeTest" data-provider="getMenuCategoryUpdateNegativeData" finished-at="2025-06-26T15:24:55Z" duration-ms="67" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryupdate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[category_name ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"menu_cat_id":"demo",
"user_id":"",
"category_name":"",
"food_type":"veg",
"image":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu_cat_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during menu category update negative test: Status code validation failed - Expected: 400, Actual: 500]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during menu category update negative test: Status code validation failed - Expected: 400, Actual: 500
	at com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript.menuCategoryUpdateNegativeTest(MenuCategoryUpdateTestScript.java:371)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryUpdateNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@48f278eb]" started-at="2025-06-26T15:24:55Z" name="tearDown" finished-at="2025-06-26T15:24:55Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.TicketViewTestScript">
        <test-method is-config="true" signature="ticketViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TicketViewTestScript@4dbb42b7]" started-at="2025-06-26T15:25:17Z" name="ticketViewSetUp" finished-at="2025-06-26T15:25:17Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in ticket view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in ticket view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.TicketViewTestScript.ticketViewSetUp(TicketViewTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketViewSetUp -->
        <test-method signature="ticketViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketViewTestScript@4dbb42b7]" started-at="2025-06-26T15:25:17Z" name="ticketViewTest" data-provider="getTicketViewData" finished-at="2025-06-26T15:25:17Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verfiy Ticket View]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "ticket_id":"4"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket details of ticket ID: 2",
    "ticket": {
        "ticket_number": null,
        "title": "Issue with system",
        "description": "The system was not working.",
        "status": "wip",
        "created_on": "02 May 2025 05:40 PM",
        "user_name": "Heena",
        "user_role": "owner",
        "attachment_1": "uploads/tickets/2_1746187816_1.jpg",
        "attachment_2": "uploads/tickets/2_1746187816_2.jpg"
    },
    "chat": [
        {
            "ticket_chat_id": 2,
            "message": "Hello, How can I help you!",
            "flag": "1",
            "created_on": "02-05-2025 05:40 PM",
            "user_name": "Admin",
            "user_role": "admin"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TicketViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.CreateOrderTestScript">
        <test-method is-config="true" signature="createOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@2c35e847]" started-at="2025-06-26T15:25:02Z" name="createOrderSetUp" finished-at="2025-06-26T15:25:02Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in create order setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in create order setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CreateOrderTestScript.createOrderSetUp(CreateOrderTestScript.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrderSetUp -->
        <test-method signature="createDineInOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@2c35e847]" started-at="2025-06-26T15:25:02Z" name="createDineInOrder" data-provider="getDineInOrderData" finished-at="2025-06-26T15:25:02Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[createorderdineIn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order dine-in]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  "tables": [78],
  "section_id": "17",
  "order_type": "dine-in",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDineInOrder -->
        <test-method signature="createDeliveryOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@2c35e847]" started-at="2025-06-26T15:25:02Z" name="createDeliveryOrder" data-provider="getDeliveryOrderData" finished-at="2025-06-26T15:25:02Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[deliveryorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order delivery]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  
  "order_type": "delivery",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDeliveryOrder -->
        <test-method signature="createParcelOrderString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@2c35e847]" started-at="2025-06-26T15:25:02Z" name="createParcelOrderString" data-provider="getParcelOrderData" finished-at="2025-06-26T15:25:02Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[createorderparcel]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order parcel]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  
  "order_type": "parcel",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createParcelOrderString -->
        <test-method signature="createDriveThroughOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@2c35e847]" started-at="2025-06-26T15:25:02Z" name="createDriveThroughOrder" data-provider="getDriveThroughOrderData" finished-at="2025-06-26T15:25:02Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[createorderdrivethrough]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order drive-through]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": 2,
  
  "order_type": "drive-through",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDriveThroughOrder -->
        <test-method signature="createCounterOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@2c35e847]" started-at="2025-06-26T15:25:02Z" name="createCounterOrder" data-provider="getCounterOrderData" finished-at="2025-06-26T15:25:02Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[createordercounter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order counter]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  
  "order_type": "counter",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCounterOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@2ed2d9cb]" started-at="2025-06-26T15:25:06Z" name="setup" finished-at="2025-06-26T15:25:06Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SupplierCreateTestScript.setup(SupplierCreateTestScript.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createSupplier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@2ed2d9cb]" started-at="2025-06-26T15:25:07Z" name="createSupplier" data-provider="getSupplierCreateData" finished-at="2025-06-26T15:25:07Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[suppliercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierCreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier create ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   
    "outlet_id": "1",
    "user_id":"2",
    "name": "Supplier five",
    "supplier_status": "",
    "credit_rating": "bad",
    "credit_limit": "50000",
    "location": "",
    "owner_name": "",
    "website": "",
    "mobile_number1": "9076543321",
    "mobille_number2": "",
    "address": ""
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Supplier created successfully."
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSupplier -->
        <test-method signature="supplierCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@2ed2d9cb]" started-at="2025-06-26T15:25:07Z" name="supplierCreateNegativeTest" data-provider="getSupplierNegativeData" finished-at="2025-06-26T15:25:07Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierCreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierCreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify error on invalid mobile number in supplier data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "Supplier Invalid Mobile", "supplier_status": "", "credit_rating": "bad", "credit_limit": "50000", "location": "", "owner_name": "", "website": "", "mobile_number1": "abcd1234", "mobille_number2": "", "address": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile_number_1 must be 10 digits."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCreateNegativeTest -->
        <test-method signature="supplierCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@2ed2d9cb]" started-at="2025-06-26T15:25:07Z" name="supplierCreateNegativeTest" data-provider="getSupplierNegativeData" finished-at="2025-06-26T15:25:07Z" duration-ms="3" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierCreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierCreate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify error when required field name is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   
    "outlet_id": "1",
    "user_id":"2",
   "name":"",
    "supplier_status": "",
    "credit_rating": "bad",
    "credit_limit": "50000",
    "location": "",
    "   ": "",
    "website": "",
    "mobile_number1": "9076543396",
    "mobille_number2": "",
    "address": ""
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Supplier name is required."
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCreateNegativeTest -->
        <test-method signature="supplierCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@2ed2d9cb]" started-at="2025-06-26T15:25:07Z" name="supplierCreateNegativeTest" data-provider="getSupplierNegativeData" finished-at="2025-06-26T15:25:07Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierCreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierCreate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify error when credit_limit is non-numeric]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "Supplier Invalid Credit", "supplier_status": "", "credit_rating": "bad", "credit_limit": "fifty thousand", "location": "", "owner_name": "", "website": "", "mobile_number1": "9076543321", "mobille_number2": "", "address": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Credit Limit must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCreateNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SendQRLinkTestScript">
        <test-method is-config="true" signature="sendQRLinkSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@4229bb3f]" started-at="2025-06-26T15:24:49Z" name="sendQRLinkSetUp" finished-at="2025-06-26T15:24:49Z" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkSetUp -->
        <test-method signature="sendQRLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@4229bb3f]" started-at="2025-06-26T15:24:49Z" name="sendQRLinkTest" data-provider="getSendQRLinkData" finished-at="2025-06-26T15:24:49Z" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sendqrlink]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sendqrlink_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify send QR Link]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "table_id":"82"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "user_app_url": "https://menumitra-testing.netlify.app/user_app/",
    "outlet_code": "9001",
    "section_id": 17,
    "table_number": 77
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SendQRLinkTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainViewTestScript">
        <test-method is-config="true" signature="captainViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@6392827e]" started-at="2025-06-26T15:25:06Z" name="captainViewSetUp" finished-at="2025-06-26T15:25:06Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CaptainViewTestScript.captainViewSetUp(CaptainViewTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewSetUp -->
        <test-method signature="captainViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@6392827e]" started-at="2025-06-26T15:25:06Z" name="captainViewTest" data-provider="getCaptainViewData" finished-at="2025-06-26T15:25:06Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "update_user_id":2,
 "user_id":20,
 "outlet_id":1,
 "app_source":"captain_app"
}
]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Successfully retrieved captain details",
  "data": {
    "outlet_id": 1,
    "user_id": 20,
    "name": "ramucaptain",
    "mobile": "8898989898",
    "aadhar_number": "343332322321",
    "address": "satara",
    "dob": "12 Jan 2023",
    "email": "h@gmail.com",
    "is_active": 1,
    "created_by": "owner",
    "updated_by": "owner",
    "created_on": "05 May 2025 12:21:02 PM",
    "updated_on": "09 Jun 2025 01:30:06 AM",
    "functionalities": [
      {
        "functionality_id": 1,
        "functionality_name": "manage_menu"
      },
      {
        "functionality_id": 2,
        "functionality_name": "manage_menu_category"
      },
      {
        "functionality_id": 3,
        "functionality_name": "manage_section"
      },
      {
        "functionality_id": 4,
        "functionality_name": "manage_table"
      },
      {
        "functionality_id": 7,
        "functionality_name": "manage_staff"
      }
    ]
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableListViewTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@32ee6fee]" started-at="2025-06-26T15:24:24Z" name="setup" finished-at="2025-06-26T15:24:37Z" duration-ms="13495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@32ee6fee]" started-at="2025-06-26T15:24:38Z" name="verifyTableListView" data-provider="getTableListViewData" finished-at="2025-06-26T15:24:41Z" duration-ms="3309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "user_id":2,
 "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": [
    {
      "section_name": "English",
      "section_id": 292,
      "tables": [
        {
          "table_ids": [
            211,
            212
          ],
          "table_numbers": [
            205,
            206
          ],
          "outlet_id": 1,
          "is_reserved": false,
          "is_joined": true,
          "total_capacity": 8,
          "is_split": false,
          "is_occupied": 0,
          "occupied_time": null,
          "grand_total": null,
          "order_id": null,
          "order_number": null,
          "action": null,
          "order_payment_settle_type": null,
          "payment_method": null
        }
      ]
    }
  ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.TableListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ViewTemplatesTestScript">
        <test-method is-config="true" signature="viewTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewTemplatesTestScript@58d75e99]" started-at="2025-06-26T15:25:03Z" name="viewTemplatesSetUp" finished-at="2025-06-26T15:25:03Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view templates setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view templates setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ViewTemplatesTestScript.viewTemplatesSetUp(ViewTemplatesTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTemplatesSetUp -->
        <test-method signature="viewTemplatesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewTemplatesTestScript@58d75e99]" started-at="2025-06-26T15:25:03Z" name="viewTemplatesTest" data-provider="getViewTemplatesData" finished-at="2025-06-26T15:25:03Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewtemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewtemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify View Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "template_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTemplatesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierListViewTestScript">
        <test-method is-config="true" signature="supplierListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierListViewTestScript@614ca7df]" started-at="2025-06-26T15:24:57Z" name="supplierListViewSetUp" finished-at="2025-06-26T15:24:57Z" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierListViewSetUp -->
        <test-method signature="verifySupplierListViewUsingPositiveData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierListViewTestScript@614ca7df]" started-at="2025-06-26T15:24:57Z" name="verifySupplierListViewUsingPositiveData" data-provider="getSupplierListViewPositiveData" finished-at="2025-06-26T15:24:57Z" duration-ms="38" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[
    {
        "supplier_id": 8,
        "name": "vaibhav",
        "supplier_code": "607502",
        "mobile_number1": "9837375656",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 7,
        "name": "C Supplier",
        "supplier_code": "493227",
        "mobile_number1": "9076543312",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 6,
        "name": "heena Supplier",
        "supplier_code": "949715",
        "mobile_number1": "9076543370",
        "mobile_number2": "9076543317",
        "supplier_status": true
    },
    {
        "supplier_id": 5,
        "name": "heena Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543379",
        "mobile_number2": "9076543310",
        "supplier_status": true
    },
    {
        "supplier_id": 4,
        "name": "C Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543319",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 2,
        "name": "B Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543217",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 1,
        "name": "Balaji",
        "supplier_code": null,
        "mobile_number1": "7996543218",
        "mobile_number2": "7993456701",
        "supplier_status": true
    }
]]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier list view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier list view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.SupplierListViewTestScript.verifySupplierListViewUsingPositiveData(SupplierListViewTestScript.java:236)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySupplierListViewUsingPositiveData -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterViewTestScript">
        <test-method is-config="true" signature="waiterViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@2b91004a]" started-at="2025-06-26T15:24:50Z" name="waiterViewSetUp" finished-at="2025-06-26T15:24:50Z" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterViewSetUp -->
        <test-method signature="verifyWaiterView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@2b91004a]" started-at="2025-06-26T15:24:50Z" name="verifyWaiterView" data-provider="getWaiterViewData" finished-at="2025-06-26T15:24:50Z" duration-ms="73" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
   "user_id":"15"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Successfully retrieved waiter details",
    "data": {
        "outlet_id": 1,
        "user_id": 10,
        "name": "waitvaibhav",
        "mobile": "6146340039",
        "aadhar_number": "343332322328",
        "address": "satara",
        "dob": "12 Jan 2023",
        "email": "h@gmail",
        "is_active": true,
        "created_by": "owner",
        "updated_by": "owner",
        "created_on": "02 May 2025 04:36:09 PM",
        "updated_on": "02 May 2025 04:47:49 PM"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.WaiterViewTestScript.verifyWaiterView(WaiterViewTestScript.java:229)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterView -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@21282ed8]" started-at="2025-06-26T15:25:18Z" name="setup" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.InventoryDeleteTestScript.setup(InventoryDeleteTestScript.java:160)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@21282ed8]" started-at="2025-06-26T15:25:18Z" name="deleteInventory" data-provider="getInventoryDeleteData" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryDelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryDelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Inventory Delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",
   "inventory_id":"3"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Inventory item deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInventory -->
        <test-method signature="deleteInventoryNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@21282ed8]" started-at="2025-06-26T15:25:18Z" name="deleteInventoryNegative" data-provider="getInventoryDeleteNegativeData" finished-at="2025-06-26T15:25:18Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryDelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryDelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify inventory deletion fails with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@", "user_id": "2", "inventory_id": "3" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInventoryNegative -->
        <test-method signature="deleteInventoryNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@21282ed8]" started-at="2025-06-26T15:25:18Z" name="deleteInventoryNegative" data-provider="getInventoryDeleteNegativeData" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryDelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryDelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify inventory deletion fails with missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "inventory_id": "3","user_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "user_id is required." }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInventoryNegative -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryDeleteTestScript -->
      <class name="com.menumitra.superclass.APIBase">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.menumitra.superclass.APIBase@5562c41e]" started-at="2025-06-26T15:24:23Z" name="setUp" finished-at="2025-06-26T15:24:24Z" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitra.superclass.APIBase@5562c41e]" started-at="2025-06-26T15:25:28Z" name="tearDown" finished-at="2025-06-26T15:25:28Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitra.superclass.APIBase -->
      <class name="com.menumitratCommonAPITestScript.MenuUpdate">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@6da21078]" started-at="2025-06-26T15:24:45Z" name="setup" finished-at="2025-06-26T15:24:45Z" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@6da21078]" started-at="2025-06-26T15:24:45Z" name="updateMenu" data-provider="getMenuUpdateData" finished-at="2025-06-26T15:24:45Z" duration-ms="97" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[put]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "menu_id": "18",
  "menu_cat_id": "3",
  "user_id": "2",
  "name": "Anda Biryani",
  "food_type": "veg",
  "description": "this healthy food",
  "spicy_index": "2",
  "portion_data": [
    {
      "portion_name": "Half",
      "price": 100,
      "unit": "250g"
    },
    {
      "portion_name": "Full",
      "price": 180,
      "unit": "500g"
    }
  ],
  "ingredients": "dal,vegetables",
  "offer": "40",
  "rating": "5.0",
  "cgst": "5",
  "sgst": "10",
  "images": [
    "C:\\\\Users\\\\hp\\\\Downloads\\\\menus\\\\Bhajaniche-Thalipeeth-Marathi-Recipe.jpg",
    "C:\\\\Users\\\\hp\\\\Downloads\\\\menus\\\\Bhajaniche-Thalipeeth-Marathi-Recipe.jpg"
  ],
  "existing_image_ids": [
    917,
    918
  ]
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu updated successfully",
    "data": {
        "menu_id": 18
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Menu update failed: Status code validation failed - Expected: 200, Actual: 500]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Menu update failed: Status code validation failed - Expected: 200, Actual: 500
	at com.menumitratCommonAPITestScript.MenuUpdate.updateMenu(MenuUpdate.java:289)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenu -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuUpdate -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript">
        <test-method is-config="true" signature="menuCategoryListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@23c30a20]" started-at="2025-06-26T15:25:19Z" name="menuCategoryListViewSetUp" finished-at="2025-06-26T15:25:19Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript.menuCategoryListViewSetUp(MenuCategoryListViewTestScript.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListViewSetUp -->
        <test-method signature="menuCategoryListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@23c30a20]" started-at="2025-06-26T15:25:19Z" name="menuCategoryListViewNegativeTest" data-provider="getMenuCategoryListViewNegativeData" finished-at="2025-06-26T15:25:19Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorylistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListViewNegativeTest -->
        <test-method signature="verifyMenuCategoryListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@23c30a20]" started-at="2025-06-26T15:25:19Z" name="verifyMenuCategoryListView" data-provider="getMenuCategoryListViewData" finished-at="2025-06-26T15:25:19Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryListView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuListView">
        <test-method is-config="true" signature="menuListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@52af26ee]" started-at="2025-06-26T15:25:04Z" name="menuListViewSetUp" finished-at="2025-06-26T15:25:04Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuListView.menuListViewSetUp(MenuListView.java:96)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewSetUp -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@52af26ee]" started-at="2025-06-26T15:25:04Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-26T15:25:04Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for special character in outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@52af26ee]" started-at="2025-06-26T15:25:04Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-26T15:25:04Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for empty outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@52af26ee]" started-at="2025-06-26T15:25:04Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-26T15:25:04Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for numeric-only string outlet_id not matching any real ID]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "9999" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID is incorrect"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@52af26ee]" started-at="2025-06-26T15:25:04Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-26T15:25:04Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for non-numeric outlet_id when numeric expected]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="verifyMenuListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@52af26ee]" started-at="2025-06-26T15:25:04Z" name="verifyMenuListView" data-provider="getMenuListViewData" finished-at="2025-06-26T15:25:04Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuListView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuListView -->
      <class name="com.menumitratCommonAPITestScript.JoinTablesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@7bd4937b]" started-at="2025-06-26T15:25:02Z" name="setup" finished-at="2025-06-26T15:25:02Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.JoinTablesTestScript.setup(JoinTablesTestScript.java:160)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="joinTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@7bd4937b]" started-at="2025-06-26T15:25:03Z" name="joinTables" data-provider="getJoinTablesData" finished-at="2025-06-26T15:25:03Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[jointables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jointables_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify join tables]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "section_id": 17,
    "primary_table_id": 83,
    "tables_to_join": [83,84],
    "user_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTables -->
        <test-method signature="joinTablesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@7bd4937b]" started-at="2025-06-26T15:25:03Z" name="joinTablesNegativeTest" data-provider="getJoinTablesNegativeData" finished-at="2025-06-26T15:25:03Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[jointables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jointtables_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "section_id": "17", "primary_table_id": "83", "tables_to_join": [83,84], "user_id": "2","outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ "detail": "Please provide outlet_id" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTablesNegativeTest -->
        <test-method signature="joinTablesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@7bd4937b]" started-at="2025-06-26T15:25:03Z" name="joinTablesNegativeTest" data-provider="getJoinTablesNegativeData" finished-at="2025-06-26T15:25:03Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[jointables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jointtables_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing section_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "primary_table_id": "83", "tables_to_join": [83,84], "user_id": "2" ,"section_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ "detail": "Please provide section_id" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTablesNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.JoinTablesTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryViewTestScript">
        <test-method is-config="true" signature="inventoryViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryViewTestScript@437da279]" started-at="2025-06-26T15:25:19Z" name="inventoryViewSetUp" finished-at="2025-06-26T15:25:19Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in inventory view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in inventory view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.InventoryViewTestScript.inventoryViewSetUp(InventoryViewTestScript.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryViewSetUp -->
        <test-method signature="verifyInventoryView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryViewTestScript@437da279]" started-at="2025-06-26T15:25:19Z" name="verifyInventoryView" data-provider="getInventoryViewData" finished-at="2025-06-26T15:25:19Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "user_id": 2,
  "app_source": "waiter_app",
  "item_id": 38
}
]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Item details retrieved successfully",
  "data": {
    "item_id": 38,
    "name": "Rice",
    "sub_category_id": 1,
    "unit": "kg",
    "purchase_price": 50.0,
    "quantity": 100,
    "min_threshold_quantity": 20,
    "expiry_date": null,
    "calories_per_1_unit": null,
    "is_repeat": false,
    "repeat_frequency": "monthly",
    "repeat_frequency_value": 1,
    "description": "Premium Basmati Rice",
    "image": null,
    "tax_type": "GST",
    "tax_rate": 5.0,
    "shelf_life_unit": "days",
    "shelf_life_value": null,
    "warehouse_id": null,
    "is_active": 1,
    "latest_transaction": null
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryView -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.UnSplitTableTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.UnSplitTableTestScript@82de64a]" started-at="2025-06-26T15:25:23Z" name="setup" finished-at="2025-06-26T15:25:23Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UnSplitTableTestScript.setup(UnSplitTableTestScript.java:124)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="unsplitTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UnSplitTableTestScript@82de64a]" started-at="2025-06-26T15:25:23Z" name="unsplitTable" data-provider="getUnsplitTableData" finished-at="2025-06-26T15:25:23Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[unsplittable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[unsplittable_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "primary_table_id":890,
  "user_id":2,
  "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Table unsplit successfully."
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsplitTable -->
      </class> <!-- com.menumitratCommonAPITestScript.UnSplitTableTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetOutletListTestScript">
        <test-method is-config="true" signature="getOutletListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@74751b3]" started-at="2025-06-26T15:25:03Z" name="getOutletListSetUp" finished-at="2025-06-26T15:25:03Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get outlet list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get outlet list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetOutletListTestScript.getOutletListSetUp(GetOutletListTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListSetUp -->
        <test-method signature="getOutletListTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@74751b3]" started-at="2025-06-26T15:25:04Z" name="getOutletListTest" data-provider="getOutletListData" finished-at="2025-06-26T15:25:04Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetOutletList]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GetOutletList_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verfiy Get Outlet List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "owner_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet list fetched successfully",
    "outlets": [
        {
            "outlet_id": 1,
            "name": "Khana Khajana Hotel",
            "address": "satara, maharashtra",
            "is_open": true,
            "outlet_status": true
        },
        {
            "outlet_id": 2,
            "name": "spicy world",
            "address": "456 Second Street, City",
            "is_open": true,
            "outlet_status": true
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetOutletListTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetRatingList">
        <test-method is-config="true" signature="getRatingListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetRatingList@2f217633]" started-at="2025-06-26T15:24:55Z" name="getRatingListSetUp" finished-at="2025-06-26T15:24:55Z" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRatingListSetUp -->
        <test-method signature="verifyRatingList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetRatingList@2f217633]" started-at="2025-06-26T15:24:55Z" name="verifyRatingList" data-provider="getRatingListData" finished-at="2025-06-26T15:24:55Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ratinglist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ratinglist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Rating list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRatingList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetRatingList -->
      <class name="com.menumitratCommonAPITestScript.sectionListViewTestScript">
        <test-method is-config="true" signature="sectionListViewSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@5ba3f27a]" started-at="2025-06-26T15:25:03Z" name="sectionListViewSetup" finished-at="2025-06-26T15:25:03Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.sectionListViewTestScript.sectionListViewSetup(sectionListViewTestScript.java:154)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionListViewSetup -->
        <test-method signature="verifySectionListViewUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@5ba3f27a]" started-at="2025-06-26T15:25:03Z" name="verifySectionListViewUsingValidInputData" data-provider="getSectionListViewPositiveInputData" finished-at="2025-06-26T15:25:03Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid section list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "user_id":1,
  "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "data": [
    {
      "section_id": 17,
      "section_n+G39ame": "Top",
      "table_count": 19,
      "occupied_table_count": 2,
      "remaining_table_count": 17
    }
  ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionListViewUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@5ba3f27a]" started-at="2025-06-26T15:25:03Z" name="tearDown" finished-at="2025-06-26T15:25:03Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetAllMenuListByCategory">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@957e06]" started-at="2025-06-26T15:25:16Z" name="setup" finished-at="2025-06-26T15:25:16Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetAllMenuListByCategory.setup(GetAllMenuListByCategory.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getAllMenuListByCategory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@957e06]" started-at="2025-06-26T15:25:16Z" name="getAllMenuListByCategory" data-provider="getAllMenuListByCategoryData" finished-at="2025-06-26T15:25:16Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getallmenulistbycategory]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getallmenulistbycategory_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get All Menu List by Category]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "category": [
            {
                "menu_cat_id": 3,
                "category_name": "Rice",
                "menu_count": 8
            }
        ],
        "menus": [
            {
                "menu_id": 7,
                "menu_name": "Chicken Biryani",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 180,
                "rating": "5.0",
                "offer": 40,
                "is_special": false,
                "is_active": true,
                "image": "http://men4u.xyz/media/Images/f0c9f8d73a10482aa52887c679b0e29a.jpg"
            },
            {
                "menu_id": 8,
                "menu_name": "Chicken Biryani",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 180,
                "rating": "5.0",
                "offer": 40,
                "is_special": false,
                "is_active": true,
                "image": "http://men4u.xyz/media/Images/d718ca725ac24bd8bd85fc9e50210fac.jpg"
            },
            {
                "menu_id": 9,
                "menu_name": "Chicken Biryani",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 250,
                "rating": "4.5",
                "offer": 10,
                "is_special": true,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 10,
                "menu_name": "Chicken Biryani@434",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 250,
                "rating": "4.5",
                "offer": 10,
                "is_special": true,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 11,
                "menu_name": "Veg Biryani",
                "menu_food_type": "",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 200,
                "rating": "3.0",
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 12,
                "menu_name": "Fried Rice",
                "menu_food_type": "veg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": null,
                "price": 180,
                "rating": null,
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 13,
                "menu_name": "Jeera Rice",
                "menu_food_type": "veg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": null,
                "price": 180,
                "rating": null,
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": "http://men4u.xyz/media/Images/a8ed0d10297243699ded209ba90d302f.jpg"
            },
            {
                "menu_id": 14,
                "menu_name": "Lemon Ricee",
                "menu_food_type": "veg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": null,
                "price": 180,
                "rating": null,
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": null
            }
        ]
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMenuListByCategory -->
        <test-method signature="getAllMenuListByCategoryNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@957e06]" started-at="2025-06-26T15:25:16Z" name="getAllMenuListByCategoryNegativeTest" data-provider="getGetAllMenuListByCategoryNegativeData" finished-at="2025-06-26T15:25:16Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getallmenulistbycategory]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getallmenulistbycategory_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns an error for invalid outlet_id "@"]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must contain only digits"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMenuListByCategoryNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetAllMenuListByCategory -->
      <class name="com.menumitratCommonAPITestScript.InventoryCategoryCreate">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryCreate@31fa1761]" started-at="2025-06-26T15:25:16Z" name="setup" finished-at="2025-06-26T15:25:16Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.InventoryCategoryCreate.setup(InventoryCategoryCreate.java:159)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createInventoryCategory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryCreate@31fa1761]" started-at="2025-06-26T15:25:16Z" name="createInventoryCategory" data-provider="getInventoryCategoryCreateData" finished-at="2025-06-26T15:25:16Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycategorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory category create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    "name":"Raw material",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"success":"Inventory Category Created Successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInventoryCategory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCategoryCreate -->
      <class name="com.menumitratCommonAPITestScript.OwnerDetailsTestScript">
        <test-method is-config="true" signature="ownerDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@194bcebf]" started-at="2025-06-26T15:25:13Z" name="ownerDetailsSetUp" finished-at="2025-06-26T15:25:13Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in owner details setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in owner details setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.OwnerDetailsTestScript.ownerDetailsSetUp(OwnerDetailsTestScript.java:92)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsSetUp -->
        <test-method signature="ownerDetailsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@194bcebf]" started-at="2025-06-26T15:25:13Z" name="ownerDetailsTest" data-provider="getOwnerDetailsData" finished-at="2025-06-26T15:25:13Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ownerdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ownerdetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Owner Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsTest -->
        <test-method signature="ownerDetailsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@194bcebf]" started-at="2025-06-26T15:25:13Z" name="ownerDetailsTest" data-provider="getOwnerDetailsData" finished-at="2025-06-26T15:25:13Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ownerDetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ownerDetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify User ID]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "user_details": {
    "user_id": 187,
    "name": "Rajat S",
    "mobile": "6222222222",
    "email": "rajat1@gmail.com",
    "role": "owner",
    "address": "dfgdfghfghgfh",
    "dob": "2007-06-11",
    "aadhar_number": "485637946577",
    "is_active": true,
    "account_type": "live",
    "created_by": 181,
    "updated_by": 187,
    "created_on": "2025-06-16 16:10:09",
    "updated_on": "2025-06-16 17:35:29"
  },
  "owner_data": {
    "owner_name": "Rajat S",
    "user_id": 187,
    "role": "owner",
    "outlet_name": "Rajat Restaurant",
    "outlet_id": 31,
    "mobile": "6396396397",
    "address": "dfvdfgvdsf",
    "outlet_type": "cake_shop",
    "outlet_status": true,
    "order_number_sequence": "since_opening",
    "is_open": true,
    "gst": "2",
    "service_charges": "1",
    "upi_id": "aaaa@okhdfcbank",
    "completed_orders": 0,
    "active_orders": 0,
    "today_total_revenue": 0
  },
  "outlet_settings": {
    "style": "blue",
    "has_dine_in": 1,
    "has_parcel": 1,
    "has_counter": 1,
    "has_delivery": 0,
    "has_drive_through": 0,
    "print_and_settle": 1,
    "has_save": 1,
    "KOT_and_save": 1,
    "settle": 1,
    "reserve_table": 1,
    "cancel": 1,
    "POS_show_menu_image": 1,
    "logo_on_bill": 1,
    "KOT_language": "en",
    "bill_language": "en"
  },
  "user_settings": {
    "language": "en"
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OwnerDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffDeleteTestScript">
        <test-method is-config="true" signature="staffDeleteSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffDeleteTestScript@17497425]" started-at="2025-06-26T15:25:13Z" name="staffDeleteSetUp" finished-at="2025-06-26T15:25:13Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff delete setup: Cannot invoke "String.isEmpty()" because "this.access" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff delete setup: Cannot invoke "String.isEmpty()" because "this.access" is null
	at com.menumitratCommonAPITestScript.StaffDeleteTestScript.staffDeleteSetUp(StaffDeleteTestScript.java:148)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffDeleteSetUp -->
        <test-method signature="testStaffDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffDeleteTestScript@17497425]" started-at="2025-06-26T15:25:13Z" name="testStaffDelete" data-provider="getStaffDeleteData" finished-at="2025-06-26T15:25:13Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify staff delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "staff_id": 31,
    "outlet_id": 1,
    "user_id":2,
    "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Staff deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStaffDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@d5b810e]" started-at="2025-06-26T15:25:07Z" name="setup" finished-at="2025-06-26T15:25:07Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript.setup(CreateQRTemplatesTestScript.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createQRTemplatesUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@d5b810e]" started-at="2025-06-26T15:25:07Z" name="createQRTemplatesUsingValidInputData" data-provider="getCreateQRTemplatesData" finished-at="2025-06-26T15:25:07Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[createqrtemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createqrtemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Create QR Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ {
        "name": "Classic",
        "qr_overlay_position": "centre",
        "image": "C:\Users\hp\Downloads\tiffany-longeway-NVe0G08Oa4o-unsplash.jpg"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createQRTemplatesUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@d5b810e]" started-at="2025-06-26T15:25:07Z" name="tearDown" finished-at="2025-06-26T15:25:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffListViewTestScript">
        <test-method is-config="true" signature="staffListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffListViewTestScript@51e69659]" started-at="2025-06-26T15:25:23Z" name="staffListViewSetUp" finished-at="2025-06-26T15:25:23Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff list view setup: Cannot invoke "String.isEmpty()" because "this.access" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff list view setup: Cannot invoke "String.isEmpty()" because "this.access" is null
	at com.menumitratCommonAPITestScript.StaffListViewTestScript.staffListViewSetUp(StaffListViewTestScript.java:89)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffListViewSetUp -->
        <test-method signature="staffListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffListViewTestScript@51e69659]" started-at="2025-06-26T15:25:24Z" name="staffListViewTest" data-provider="getStaffListViewData" finished-at="2025-06-26T15:25:24Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[stafflistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stafflistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify staff list view using valid input]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   
    "outlet_id": 1,
    "user_id":2,
    "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "total_count": 5,
  "lists": [
    {
      "staff_id": 27,
      "name": "Gggf",
      "mobile": "8886868686",
      "address": "null",
      "role": "receptionist",
      "dob": "04 May 2025",
      "aadhar_number": "677777555555",
      "outlet_id": 1,
      "photo": null
    }
  ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ResendOTPTestScript">
        <test-method is-config="true" signature="setupResendOTP()[pri:0, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@2c1b194a]" started-at="2025-06-26T15:25:17Z" name="setupResendOTP" finished-at="2025-06-26T15:25:17Z" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupResendOTP -->
        <test-method signature="verifyRessendOTPUSingPositiveInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@2c1b194a]" started-at="2025-06-26T15:25:17Z" name="verifyRessendOTPUSingPositiveInputData" data-provider="getPositiveinputData" finished-at="2025-06-26T15:25:17Z" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid mobile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"6264335759"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"role":"owner"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRessendOTPUSingPositiveInputData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@2c1b194a]" started-at="2025-06-26T15:25:17Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-26T15:25:17Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing mobile field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide mobile number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@2c1b194a]" started-at="2025-06-26T15:25:17Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-26T15:25:17Z" duration-ms="39" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"abc123"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@2c1b194a]" started-at="2025-06-26T15:25:17Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-26T15:25:17Z" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mobile less than 10 digits]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"12345"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Mobile number must be a 10 digits number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@2c1b194a]" started-at="2025-06-26T15:25:17Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-26T15:25:17Z" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mobile with special chars]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"98765@#123"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@2c1b194a]" started-at="2025-06-26T15:25:17Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-26T15:25:17Z" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify 1 to 5 first digit]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"1264335759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must start with digits 6, 7, 8, or 9"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
      </class> <!-- com.menumitratCommonAPITestScript.ResendOTPTestScript -->
      <class name="com.menumitratCommonAPITestScript.SearchMenu">
        <test-method is-config="true" signature="searchMenuSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@1a18644]" started-at="2025-06-26T15:24:55Z" name="searchMenuSetUp" finished-at="2025-06-26T15:24:56Z" duration-ms="318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMenuSetUp -->
        <test-method signature="searchMenuNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@1a18644]" started-at="2025-06-26T15:24:56Z" name="searchMenuNegativeTest" data-provider="getSearchMenuNegativeData" finished-at="2025-06-26T15:24:56Z" duration-ms="59" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[searchmenu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[searchmenu_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify behavior when invalid keyword is searched]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@", "keyword": "Invalid Biryani" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in search menu negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in search menu negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.SearchMenu.searchMenuNegativeTest(SearchMenu.java:465)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMenuNegativeTest -->
        <test-method signature="verifySearchMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@1a18644]" started-at="2025-06-26T15:24:56Z" name="verifySearchMenu" data-provider="getSearchMenuData" finished-at="2025-06-26T15:24:56Z" duration-ms="57" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[searchmenu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[searchmenu_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify search menu]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "keyword":"Anda Biryani"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "menu_list": [
        {
            "menu_id": 18,
            "menu_name": "Anda Biryani",
            "menu_food_type": "veg",
            "outlet_id": 1,
            "outlet_veg_nonveg": "veg",
            "menu_cat_id": 3,
            "category_name": "Rice",
            "spicy_index": "2",
            "price": 180,
            "rating": "5.0",
            "offer": 40,
            "is_special": false,
            "image": "http://men4u.xyz/media/Images/4e8e71420d0d48ebbd1252fe465fa2a9.jpg",
            "is_favourite": 0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in search menu test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in search menu test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.SearchMenu.verifySearchMenu(SearchMenu.java:262)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchMenu -->
      </class> <!-- com.menumitratCommonAPITestScript.SearchMenu -->
      <class name="com.menumitratCommonAPITestScript.OutletSettingsViewTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@6283d8b8]" started-at="2025-06-26T15:24:52Z" name="setup" finished-at="2025-06-26T15:24:53Z" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="outletSettingsView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@6283d8b8]" started-at="2025-06-26T15:24:53Z" name="outletSettingsView" data-provider="getOutletSettingsViewData" finished-at="2025-06-26T15:24:53Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[outletsettingsview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[outletsettingsview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Outlet Settings view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletSettingsView -->
        <test-method signature="outletSettingsViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@6283d8b8]" started-at="2025-06-26T15:24:53Z" name="outletSettingsViewNegativeTest" data-provider="getOutletSettingsViewNegativeData" finished-at="2025-06-26T15:24:53Z" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[outletsettingsview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[outletsettingsview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"&"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletSettingsViewNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OutletSettingsViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript@611889f4]" started-at="2025-06-26T15:24:54Z" name="setup" finished-at="2025-06-26T15:24:54Z" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSupplierCreditRatingChoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript@611889f4]" started-at="2025-06-26T15:24:54Z" name="testSupplierCreditRatingChoices" data-provider="getSupplierCreditRatingChoicesData" finished-at="2025-06-26T15:24:54Z" duration-ms="50" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[suppliercreditratinchoices]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[suppliercreditratinchoices_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier credit ratin choices]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "credit_rating_choices": {
        "excellent": "excellent",
        "good": "good",
        "bad": "bad",
        "very_bad": "very_bad",
        "not_rated": "not_rated"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during supplier credit rating choices test execution: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during supplier credit rating choices test execution: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript.testSupplierCreditRatingChoices(SupplierCreditRatingChoicesTestScript.java:219)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierCreditRatingChoices -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetSpicyIndexList">
        <test-method is-config="true" signature="getSpicyIndexListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetSpicyIndexList@3e11f9e9]" started-at="2025-06-26T15:25:15Z" name="getSpicyIndexListSetUp" finished-at="2025-06-26T15:25:15Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get spicy index list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get spicy index list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetSpicyIndexList.getSpicyIndexListSetUp(GetSpicyIndexList.java:92)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpicyIndexListSetUp -->
        <test-method signature="verifySpicyIndexList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetSpicyIndexList@3e11f9e9]" started-at="2025-06-26T15:25:15Z" name="verifySpicyIndexList" data-provider="getSpicyIndexListData" finished-at="2025-06-26T15:25:15Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getspicyindexlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getspicyindexlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Spicy Index list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpicyIndexList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetSpicyIndexList -->
      <class name="com.menumitratCommonAPITestScript.MenuView">
        <test-method is-config="true" signature="menuViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@209da20d]" started-at="2025-06-26T15:25:05Z" name="menuViewSetUp" finished-at="2025-06-26T15:25:05Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuView.menuViewSetUp(MenuView.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewSetUp -->
        <test-method signature="menuViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@209da20d]" started-at="2025-06-26T15:25:06Z" name="menuViewNegativeTest" data-provider="getMenuViewNegativeData" finished-at="2025-06-26T15:25:06Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when invalid outlet_id is provided]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@", "menu_id": "18" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewNegativeTest -->
        <test-method signature="menuViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@209da20d]" started-at="2025-06-26T15:25:06Z" name="menuViewNegativeTest" data-provider="getMenuViewNegativeData" finished-at="2025-06-26T15:25:06Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when invalid menu_id is provided]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_id": "#" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"menu_id must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewNegativeTest -->
        <test-method signature="menuViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@209da20d]" started-at="2025-06-26T15:25:06Z" name="menuViewNegativeTest" data-provider="getMenuViewNegativeData" finished-at="2025-06-26T15:25:06Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "menu_id": "18","outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewNegativeTest -->
        <test-method signature="verifyMenuView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@209da20d]" started-at="2025-06-26T15:25:06Z" name="verifyMenuView" data-provider="getMenuViewData" finished-at="2025-06-26T15:25:06Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "menu_id": "18"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuView -->
      <class name="com.menumitratCommonAPITestScript.ViewProfileTestScript">
        <test-method is-config="true" signature="viewProfileSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@316bcf94]" started-at="2025-06-26T15:25:15Z" name="viewProfileSetUp" finished-at="2025-06-26T15:25:15Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view profile setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view profile setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ViewProfileTestScript.viewProfileSetUp(ViewProfileTestScript.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProfileSetUp -->
        <test-method signature="verifyViewProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@316bcf94]" started-at="2025-06-26T15:25:15Z" name="verifyViewProfile" data-provider="getViewProfileData" finished-at="2025-06-26T15:25:15Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view profile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "user_details": {
            "user_id": 3,
            "name": "Komal",
            "role": "Manager",
            "dob": "06 Oct 1990",
            "email": "koom@gmail.com",
            "mobile_number": "6260035759",
            "aadhar_number": "856932014785",
            "last_login": null,
            "created_on": "26 Apr 2025 09:14:56 AM",
            "updated_on": "01 May 2025 03:55:25 PM",
            "created_by": null,
            "updated_by": "Owner"
        },
        "user_active_sessions": []
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewProfile -->
        <test-method signature="verifyViewProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@316bcf94]" started-at="2025-06-26T15:25:15Z" name="verifyViewProfile" data-provider="getViewProfileData" finished-at="2025-06-26T15:25:15Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view profile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "user_details": {
            "user_id": 3,
            "name": "Komal",
            "role": "Manager",
            "dob": "06 Oct 1990",
            "email": "koom@gmail.com",
            "mobile_number": "6260035759",
            "aadhar_number": "856932014785",
            "last_login": null,
            "created_on": "26 Apr 2025 09:14:56 AM",
            "updated_on": "01 May 2025 03:55:25 PM",
            "created_by": null,
            "updated_by": "Owner"
        },
        "user_active_sessions": []
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewProfile -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewProfileTestScript -->
      <class name="com.menumitratCommonAPITestScript.loginTestScript">
        <test-method is-config="true" signature="LoginAPiTestSetup()[pri:0, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="LoginAPiTestSetup" finished-at="2025-06-26T15:24:59Z" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPiTestSetup -->
        <test-method signature="verifyloginUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyloginUsingValidInputData" data-provider="getPositiveInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="78" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid login]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"6264335759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Your OTP is sent successfully.",
    "role": "owner"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Login verification failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Login verification failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.loginTestScript.verifyloginUsingValidInputData(loginTestScript.java:256)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyloginUsingValidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using empty test data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Please provide mobile number"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using less than ten digit test data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"626433575"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile number must be a 10 digits number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using special character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"626433@ 59"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using  character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"6264Af35759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="62" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using  Not register number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"9745635634"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
 
    "details": "This mobile number is not registered."
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Negative test case login_006 failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Negative test case login_006 failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.loginTestScript.verifyLoginUsingInvalidInputData(loginTestScript.java:327)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using  combination of all character and special character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"Adbt@#4Gh7"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@18d87d80]" started-at="2025-06-26T15:24:59Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify 1 to 5 first digit]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"1264335759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must start with digits 6, 7, 8, or 9"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.loginTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript@2ea41516]" started-at="2025-06-26T15:25:12Z" name="setup" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier status choices setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier status choices setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript.setup(SupplierStatusChoicesTestScript.java:166)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSupplierStatusChoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript@2ea41516]" started-at="2025-06-26T15:25:12Z" name="testSupplierStatusChoices" data-provider="getSupplierStatusChoicesData" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierstatuschoices]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierstatuschoices_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier status choices]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "supplier_status_choices": {
        "active": "active",
        "inactive": "inactive"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierStatusChoices -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript -->
      <class name="com.menumitratCommonAPITestScript.CreateBookingTestScript">
        <test-method is-config="true" signature="bookingCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CreateBookingTestScript@4b8ee4de]" started-at="2025-06-26T15:25:26Z" name="bookingCreateSetUp" finished-at="2025-06-26T15:25:26Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in booking create setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in booking create setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CreateBookingTestScript.bookingCreateSetUp(CreateBookingTestScript.java:84)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingCreateSetUp -->
        <test-method signature="bookingCreateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateBookingTestScript@4b8ee4de]" started-at="2025-06-26T15:25:27Z" name="bookingCreateTest" data-provider="getBookingCreateData" finished-at="2025-06-26T15:25:27Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[bookingcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bookingcreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": 2,
    "outlet_id": 1,
    "app_source": "pos_app",
    "menu_items": [
        {
            "menu_id": 56,
            "quantity": 2,
            "price": 250.00,
            "portion_name": "Half",
            "special_note": "Extra spicy"
        }
    ],
    "booking_details": {
        "delivery_datetime": "2025-06-10 14:00:00",
        "expected_datetime": "2025-06-10 14:30:00",
        "customer_name": "John Doe",
        "customer_mobile": "9876543210",
        "special_message": "Birthday celebration",
        "comment": "Please arrange cake and decorations"
    },
    "payment_details": {
        "advance_amount": 100.00,
        "payment_method": "advance_payment"
    }
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Booking created successfully",
  "data": {
    "booking_id": 100,
    "order_id": 5243,
    "order_number": "2244",
    "total_amount": 204.02,
    "advance_paid": 100.0,
    "pending_amount": 104.02
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingCreateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateBookingTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryListViewTestScript">
        <test-method is-config="true" signature="inventoryListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryListViewTestScript@c88a337]" started-at="2025-06-26T15:25:08Z" name="inventoryListSetUp" finished-at="2025-06-26T15:25:08Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in inventory list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in inventory list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.InventoryListViewTestScript.inventoryListSetUp(InventoryListViewTestScript.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryListSetUp -->
        <test-method signature="verifyInventoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryListViewTestScript@c88a337]" started-at="2025-06-26T15:25:08Z" name="verifyInventoryList" data-provider="getInventoryListData" finished-at="2025-06-26T15:25:08Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory list view ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "user_id": 2,
  "app_source": "pos_app"
}
]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Items retrieved successfully",
  "data": {
    "total": 39,
    "items": [
      {
        "item_id": 1,
        "name": "First Form Executed",
        "unit": "Kg",
        "purchase_price": 40.0,
        "quantity": 1383,
        "is_active": 1
      }
    ]
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTemplatesListTestScript">
        <test-method is-config="true" signature="getTemplatesListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplatesListTestScript@7c24b813]" started-at="2025-06-26T15:25:02Z" name="getTemplatesListSetUp" finished-at="2025-06-26T15:25:02Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get templates list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get templates list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetTemplatesListTestScript.getTemplatesListSetUp(GetTemplatesListTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplatesListSetUp -->
        <test-method signature="verifyTemplatesList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplatesListTestScript@7c24b813]" started-at="2025-06-26T15:25:02Z" name="verifyTemplatesList" data-provider="getTemplatesListData" finished-at="2025-06-26T15:25:02Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettemplateslist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettemplateslist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Template List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTemplatesList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTemplatesListTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategorysTestScript">
        <test-method is-config="true" signature="menuCategorysSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@f0da945]" started-at="2025-06-26T15:25:13Z" name="menuCategorysSetUp" finished-at="2025-06-26T15:25:13Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu categorys setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu categorys setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuCategorysTestScript.menuCategorysSetUp(MenuCategorysTestScript.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategorysSetUp -->
        <test-method signature="menuCategoriesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@f0da945]" started-at="2025-06-26T15:25:14Z" name="menuCategoriesNegativeTest" data-provider="getMenuCategoriesNegativeData" finished-at="2025-06-26T15:25:14Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting menu categories negative test data: No valid menu categories negative test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting menu categories negative test data: No valid menu categories negative test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getting menu categories negative test data: No valid menu categories negative test data found after filtering
	at com.menumitratCommonAPITestScript.MenuCategorysTestScript.getMenuCategoriesNegativeData(MenuCategorysTestScript.java:297)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoriesNegativeTest -->
        <test-method signature="verifyMenuCategorys(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@f0da945]" started-at="2025-06-26T15:25:14Z" name="verifyMenuCategorys" data-provider="getMenuCategorysData" finished-at="2025-06-26T15:25:14Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorys]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorys_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu categorys]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "categorys_list": {
        "indian": 2,
        "Italian": 4
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategorys -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategorysTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateTableTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@f5acb9d]" started-at="2025-06-26T15:25:01Z" name="setup" finished-at="2025-06-26T15:25:01Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UpdateTableTestScript.setup(UpdateTableTestScript.java:155)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateTableUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@f5acb9d]" started-at="2025-06-26T15:25:01Z" name="updateTableUsingValidInputData" data-provider="getUpdateTableData" finished-at="2025-06-26T15:25:01Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatetable_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update Table]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    
    "table_number": "77",
    "new_table_number": "78",
    "section_id": "17",
    "outlet_id": "1",
    "order_id": "6",
    "user_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTableUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@f5acb9d]" started-at="2025-06-26T15:25:01Z" name="tearDown" finished-at="2025-06-26T15:25:01Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateTableTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainCreateTestScript">
        <test-method is-config="true" signature="captainCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@543588e6]" started-at="2025-06-26T15:25:00Z" name="captainCreateSetUp" finished-at="2025-06-26T15:25:00Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateSetUp(CaptainCreateTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateSetUp -->
        <test-method signature="captainCreateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@543588e6]" started-at="2025-06-26T15:25:01Z" name="captainCreateTest" data-provider="getCaptainCreateData" finished-at="2025-06-26T15:25:01Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 
 "user_id":2,
 "outlet_id":"1",
 "name":"ramucaptain",
 "mobile":"8945678989",
 "address":"satara",
 "aadhar_number":"343332322321",
 "dob":"12 Jan 2023",
 "email":"h@gmail.com",
 "app_source":"captain_app",
 "functionality_ids":[1,2,3,4]

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Captain created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.orderListViewSetUp">
        <test-method is-config="true" signature="orderListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@7fee8714]" started-at="2025-06-26T15:24:45Z" name="orderListViewSetUp" finished-at="2025-06-26T15:24:46Z" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewSetUp -->
        <test-method signature="orderListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@7fee8714]" started-at="2025-06-26T15:24:46Z" name="orderListViewTest" data-provider="getOrderListViewData" finished-at="2025-06-26T15:24:49Z" duration-ms="2820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Order order list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
           
    "outlet_id":"1",
    "order_status":"cooking"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "success",
    "lists": {
        "22 Dec 2024": [
            {
                "order_id": 6,
                "order_number": "782877",
                "order_status": "paid",
                "table_number": "1",
                "order_type": "dine-in",
                "payment_method": null,
                "restaurant_id": 1,
                "restaurant_name": "jagadamb",
                "total_bill_amount": 500.0,
                "total_bill_with_discount": 350.0,
                "service_charges_percent": 1.0,
                "service_charges_amount": 3.5,
                "gst_percent": 1.0,
                "gst_amount": 3.5,
                "discount_percent": 30.0,
                "discount_amount": 150.0,
                "grand_total": 357.0,
                "menu_count": 1,
                 "time": "04:33:21 PM",
                "section_name": "Dinning"
            },a]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.orderListViewSetUp -->
      <class name="com.menumitratCommonAPITestScript.WareHouseUpdateTestScript">
        <test-method is-config="true" signature="wareHouseUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WareHouseUpdateTestScript@47d9a273]" started-at="2025-06-26T15:25:26Z" name="wareHouseUpdateSetUp" finished-at="2025-06-26T15:25:26Z" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wareHouseUpdateSetUp -->
        <test-method signature="wareHouseUpdateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WareHouseUpdateTestScript@47d9a273]" started-at="2025-06-26T15:25:26Z" name="wareHouseUpdateTest" data-provider="getWareHouseUpdateData" finished-at="2025-06-26T15:25:26Z" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[warehouseUpdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[warehouseUpdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "user_id": 2,
  "warehouse_id": 1,
  "app_source": "captain_app",
  "location": "Katraj",
  "address": "Ground Floor, East Wing, Hotel Plaza, MG Road, Mumbai",
  "manager_name": "Pooja Sharma",
  "manager_mobile": "8876543210",
  "manager_alternate_mobile": "9223456780",
  "warehouse_type": "Kitchen Supplies",
  "capacity_unit": "kg",
  "capacity_value": 5000,
  "is_active":1
}
]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Warehouse updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in warehouse update test case: warehouseUpdate_001 - Cannot invoke "String.substring(int, int)" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in warehouse update test case: warehouseUpdate_001 - Cannot invoke "String.substring(int, int)" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.WareHouseUpdateTestScript.wareHouseUpdateTest(WareHouseUpdateTestScript.java:192)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wareHouseUpdateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.WareHouseUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@5d7148e2]" started-at="2025-06-26T15:25:01Z" name="setup" finished-at="2025-06-26T15:25:01Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript.setup(CheckTableIsReservedTestScript.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkIfTableIsReserved(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@5d7148e2]" started-at="2025-06-26T15:25:01Z" name="checkIfTableIsReserved" data-provider="getCheckTableIsReservedData" finished-at="2025-06-26T15:25:01Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[checktableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checktableisreserved_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify check Table Reserved]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "table_id":81,
    "table_number":"76"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "table_id": 81,
    "table_number": 76,
    "is_reserved": true
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfTableIsReserved -->
      </class> <!-- com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableIsReservedTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@2805d709]" started-at="2025-06-26T15:25:11Z" name="setup" finished-at="2025-06-26T15:25:11Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.TableIsReservedTestScript.setup(TableIsReservedTestScript.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="setTableIsReserved(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@2805d709]" started-at="2025-06-26T15:25:12Z" name="setTableIsReserved" data-provider="getTableIsReservedData" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableisreserved_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Table is Reserved]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "table_id":81,
    "table_number":"76",
    "outlet_id":"1",
    "user_id":"2",
    "is_reserved":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "table_id": 81,
    "table_number": 76,
    "is_reserved": true,
    "detail": "Table reservation status updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTableIsReserved -->
        <test-method signature="tableIsReservedNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@2805d709]" started-at="2025-06-26T15:25:12Z" name="tableIsReservedNegativeTest" data-provider="getTableIsReservedNegativeData" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableisreserved_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing table_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "table_id":"",
    "table_number":"76",
    "outlet_id":"1",
    "user_id":"2",
    "is_reserved":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "table_id is required" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableIsReservedNegativeTest -->
        <test-method signature="tableIsReservedNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@2805d709]" started-at="2025-06-26T15:25:12Z" name="tableIsReservedNegativeTest" data-provider="getTableIsReservedNegativeData" finished-at="2025-06-26T15:25:12Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableisreserved_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "table_id":"81",
    "table_number":"76",
    "outlet_id":"1",
    "user_id":"",
    "is_reserved":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "user_id is required" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableIsReservedNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TableIsReservedTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetInventoryCategoryList">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetInventoryCategoryList@22ef9844]" started-at="2025-06-26T15:24:52Z" name="setup" finished-at="2025-06-26T15:24:52Z" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getInventoryCategoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetInventoryCategoryList@22ef9844]" started-at="2025-06-26T15:24:52Z" name="getInventoryCategoryList" data-provider="getInventoryCategoryListData" finished-at="2025-06-26T15:24:52Z" duration-ms="109" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getinventorycategorylist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getinventorycategorylist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Inventory Category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Success",
    "categories": [
        {
            "inventory_category_id": 1,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 2,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 3,
            "name": "water"
        },
        {
            "inventory_category_id": 4,
            "name": "Farm"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.GetInventoryCategoryList.getInventoryCategoryList(GetInventoryCategoryList.java:242)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInventoryCategoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetInventoryCategoryList -->
      <class name="com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript">
        <test-method is-config="true" signature="orderMenuDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript@53ce1329]" started-at="2025-06-26T15:25:14Z" name="orderMenuDetailsSetUp" finished-at="2025-06-26T15:25:14Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in order menu details setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in order menu details setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript.orderMenuDetailsSetUp(OrderMenuDetailsTestScript.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderMenuDetailsSetUp -->
        <test-method signature="verifyOrderMenuDetails(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript@53ce1329]" started-at="2025-06-26T15:25:15Z" name="verifyOrderMenuDetails" data-provider="getOrderMenuDetailsData" finished-at="2025-06-26T15:25:15Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ordermenudetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ordermenudetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Order Menu Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderMenuDetails -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@12aba8be]" started-at="2025-06-26T15:25:21Z" name="setup" finished-at="2025-06-26T15:25:21Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier delete setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier delete setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SupplierDeleteTestScript.setup(SupplierDeleteTestScript.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="supplierDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@12aba8be]" started-at="2025-06-26T15:25:21Z" name="supplierDeleteNegativeTest" data-provider="getSupplierDeleteNegativeData" finished-at="2025-06-26T15:25:21Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierdelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error when user_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "supplier_id": "4" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Supplier not found."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierDeleteNegativeTest -->
        <test-method signature="supplierDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@12aba8be]" started-at="2025-06-26T15:25:21Z" name="supplierDeleteNegativeTest" data-provider="getSupplierDeleteNegativeData" finished-at="2025-06-26T15:25:21Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierdelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error when supplier_id is invalid]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "supplier_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"supplier_id must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierDeleteNegativeTest -->
        <test-method signature="testSupplierDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@12aba8be]" started-at="2025-06-26T15:25:21Z" name="testSupplierDelete" data-provider="getSupplierDeleteData" finished-at="2025-06-26T15:25:21Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier delete ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "user_id":"2",
    "supplier_id":"4"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Supplier deleted successfully."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuDelete">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@3a44431a]" started-at="2025-06-26T15:25:12Z" name="setup" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuDelete.setup(MenuDelete.java:161)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@3a44431a]" started-at="2025-06-26T15:25:12Z" name="deleteMenu" data-provider="getMenuDeleteData" finished-at="2025-06-26T15:25:12Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_id":"19",
    "user_id":"2"
}
  ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteMenu -->
        <test-method signature="menuDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@3a44431a]" started-at="2025-06-26T15:25:12Z" name="menuDeleteNegativeTest" data-provider="getMenuDeleteNegativeData" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu deletion with missing menu_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "user_id":"2" ,"menu_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide menu_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuDeleteNegativeTest -->
        <test-method signature="menuDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@3a44431a]" started-at="2025-06-26T15:25:12Z" name="menuDeleteNegativeTest" data-provider="getMenuDeleteNegativeData" finished-at="2025-06-26T15:25:12Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu deletion with invalid user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_id":"38", "user_id":"abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Invalid user_id" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuDeleteNegativeTest -->
        <test-method signature="menuDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@3a44431a]" started-at="2025-06-26T15:25:12Z" name="menuDeleteNegativeTest" data-provider="getMenuDeleteNegativeData" finished-at="2025-06-26T15:25:12Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu deletion with non-existent menu_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_id":"9999", "user_id":"2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Menu ID does not exist"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuDeleteNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuDelete -->
      <class name="com.menumitratCommonAPITestScript.ChefUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@434a63ab]" started-at="2025-06-26T15:25:11Z" name="setup" finished-at="2025-06-26T15:25:11Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ChefUpdateTestScript.setup(ChefUpdateTestScript.java:148)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@434a63ab]" started-at="2025-06-26T15:25:11Z" name="updateChef" data-provider="getChefUpdateData" finished-at="2025-06-26T15:25:11Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    "update_user_id":"2",
    "user_id":27,
    "outlet_id": "1",
    "name": "new test ",
    "mobile":"9689075610",
    "address" : "lean",
    "aadhar_number": "123456789012",
    "dob":"12 Jan 2023",
    "app_source":"owner_app",
    "email":"h4@gmail.com"  ,
    "functionality_ids": [1,2,3,4]
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Chef updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ListViewOutletTestScript">
        <test-method is-config="true" signature="listViewOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ListViewOutletTestScript@6e0f5f7f]" started-at="2025-06-26T15:25:11Z" name="listViewOutletSetUp" finished-at="2025-06-26T15:25:11Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in list view outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in list view outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ListViewOutletTestScript.listViewOutletSetUp(ListViewOutletTestScript.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listViewOutletSetUp -->
        <test-method signature="verifyListViewOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ListViewOutletTestScript@6e0f5f7f]" started-at="2025-06-26T15:25:11Z" name="verifyListViewOutlet" data-provider="getListViewOutletData" finished-at="2025-06-26T15:25:11Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering
	at com.menumitratCommonAPITestScript.ListViewOutletTestScript.getListViewOutletData(ListViewOutletTestScript.java:188)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListViewOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.ListViewOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetInorOutList">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetInorOutList@bae7dc0]" started-at="2025-06-26T15:25:05Z" name="setup" finished-at="2025-06-26T15:25:05Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in in or out list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in in or out list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetInorOutList.setup(GetInorOutList.java:166)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInOrOutList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetInorOutList@bae7dc0]" started-at="2025-06-26T15:25:05Z" name="testInOrOutList" data-provider="getInOrOutListData" finished-at="2025-06-26T15:25:05Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getinoroutlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getinoroutlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Int or Out list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInOrOutList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetInorOutList -->
      <class name="com.menumitratCommonAPITestScript.UbacFuctionalityViewTestScript">
        <test-method is-config="true" signature="ubacViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UbacFuctionalityViewTestScript@201a4587]" started-at="2025-06-26T15:25:25Z" name="ubacViewSetUp" finished-at="2025-06-26T15:25:25Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in UBAC list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in UBAC list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UbacFuctionalityViewTestScript.ubacViewSetUp(UbacFuctionalityViewTestScript.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ubacViewSetUp -->
        <test-method signature="ubacViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UbacFuctionalityViewTestScript@201a4587]" started-at="2025-06-26T15:25:25Z" name="ubacViewTest" data-provider="getUbacViewData" finished-at="2025-06-26T15:25:25Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ubacview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ubacview]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "functionality_name":"manage_menu"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "functionality_name": "manage_menu",
    "assigned_users": [
        {
            "user_id": 2,
            "name": "Heenann",
            "role": "owner"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ubacViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UbacFuctionalityViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChangeSettingsTestScript">
        <test-method is-config="true" signature="changeSettingsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@5b03b9fe]" started-at="2025-06-26T15:25:10Z" name="changeSettingsSetUp" finished-at="2025-06-26T15:25:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in change settings setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in change settings setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ChangeSettingsTestScript.changeSettingsSetUp(ChangeSettingsTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsSetUp -->
        <test-method signature="changeSettingsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@5b03b9fe]" started-at="2025-06-26T15:25:10Z" name="changeSettingsTest" data-provider="getChangeSettingsData" finished-at="2025-06-26T15:25:10Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[changesettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[changesettings_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify changes settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",
    "type":"settle",
    "value":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Settings updated successfully",
    "data": {
        "style": "blue",
        "has_dine_in": true,
        "has_parcel": true,
        "has_drive_through": false,
        "has_counter": true,
        "has_delivery": true,
        "print_and_save": true,
        "KOT_and_save": true,
        "settle": false,
        "reserve_table": true,
        "cancel": true,
        "POS_show_menu_image": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChangeSettingsTestScript -->
      <class name="com.menumitratCommonAPITestScript.AddMenusToOrder">
        <test-method is-config="true" signature="addMenusToOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@3ee37e5a]" started-at="2025-06-26T15:25:12Z" name="addMenusToOrderSetUp" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in add menus to order setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in add menus to order setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.AddMenusToOrder.addMenusToOrderSetUp(AddMenusToOrder.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMenusToOrderSetUp -->
        <test-method signature="verifyAddMenusToOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@3ee37e5a]" started-at="2025-06-26T15:25:12Z" name="verifyAddMenusToOrder" data-provider="getAddMenusToOrderData" finished-at="2025-06-26T15:25:12Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[addmenustoorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[addmenustoorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Add Menus to order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1",
    "order_items":[
        {
            "menu_id":"13",
            "quantity":"10",
            "portion_name": "Full",
            "comment":"add spice"

        }
    ]
 
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "order_details": {
        "order_id": 5,
        "order_number": "5",
        "table_number": [
            "77"
        ],
        "order_status": "cooking",
        "menu_count": 2,
        "total_bill_amount": 6300.0,
        "total_bill_with_discount": 6300.0,
        "service_charges_percent": 1.0,
        "service_charges_amount": 63.0,
        "gst_percent": 1.0,
        "gst_amount": 63.0,
        "discount_percent": 0.0,
        "discount_amount": 0.0,
        "grand_total": 6426.0,
        "datetime": "03-May-2025 04:15:00 PM"
    },
    "menu_details": [
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 25,
            "offer": 0,
            "comment": "Extra spicy please",
            "menu_sub_total": 4500.0,
            "portion_name": "Full",
            "unit": "500g"
        },
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 10,
            "offer": 0,
            "comment": "add spice",
            "menu_sub_total": 1800.0,
            "portion_name": "Full",
            "unit": "500g"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddMenusToOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.AddMenusToOrder -->
      <class name="com.menumitratCommonAPITestScript.WaiterDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterDeleteTestScript@ffaa6af]" started-at="2025-06-26T15:25:14Z" name="setup" finished-at="2025-06-26T15:25:14Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.WaiterDeleteTestScript.setup(WaiterDeleteTestScript.java:160)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteWaiter(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterDeleteTestScript@ffaa6af]" started-at="2025-06-26T15:25:14Z" name="deleteWaiter" data-provider="getWaiterDeleteData" finished-at="2025-06-26T15:25:14Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "update_user_id":"2",
    "outlet_id":"1",
    "user_id":"19"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "(pymysql.err.IntegrityError) (1048, \"Column 'user_id' cannot be null\")\n[SQL: UPDATE user_settings SET user_id=%(user_id)s WHERE user_settings.user_settings_id = %(user_settings_user_settings_id)s]\n[parameters: {'user_id': None, 'user_settings_user_settings_id': 2}]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteWaiter -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.CreateTicketTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@4803b726]" started-at="2025-06-26T15:25:14Z" name="setup" finished-at="2025-06-26T15:25:14Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CreateTicketTestScript.setup(CreateTicketTestScript.java:151)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createTicketUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@4803b726]" started-at="2025-06-26T15:25:14Z" name="createTicketUsingValidInputData" data-provider="getCreateTicketData" finished-at="2025-06-26T15:25:14Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[createticket]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createticket_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify create Ticket]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": "2",
    "outlet_id": "1",
    "title": "Issue with system",
    "description": "The system was not working.",
    "status": "open",
    "attachment_1" : "",
    "attachment_2" :""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket created successfully.",
    "ticket_id": 3
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTicketUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@4803b726]" started-at="2025-06-26T15:25:14Z" name="tearDown" finished-at="2025-06-26T15:25:14Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateTicketTestScript -->
      <class name="com.menumitratCommonAPITestScript.UdhariLedgerListTestScript">
        <test-method is-config="true" signature="udhariLedgerListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerListTestScript@54a7079e]" started-at="2025-06-26T15:25:26Z" name="udhariLedgerListSetUp" finished-at="2025-06-26T15:25:26Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in Udhari Ledger List setup: Access token is null or empty after verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in Udhari Ledger List setup: Access token is null or empty after verification
	at com.menumitratCommonAPITestScript.UdhariLedgerListTestScript.udhariLedgerListSetUp(UdhariLedgerListTestScript.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerListSetUp -->
        <test-method signature="udhariLedgerListTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerListTestScript@54a7079e]" started-at="2025-06-26T15:25:26Z" name="udhariLedgerListTest" data-provider="getUdhariLedgerListData" finished-at="2025-06-26T15:25:26Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[udhariledgerlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[udhariledgerlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "ledger_id": "1",
    
    "outlet_id" :"1"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "ledgers": [
    {
      "ledger_id": 56,
      "customer_name": "Test",
      "customer_mobile": "9876543211",
      "customer_address": "123 Main Street, City",
      "order_id": 343,
      "order_number": "343",
      "bill_amount": 137.31,
      "udhari_datetime": "11-Jun-2025 09:55:21 AM",
      "settle_amount": 0.0,
      "settle_datetime": null,
      "pending_amount": 137.31,
      "ledger_status": "pending",
      "estimated_settlement_period": "1 week",
      "outlet_name": "Bhavani Hotelh"
    }
  ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerListTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UdhariLedgerListTestScript -->
      <class name="com.menumitratCommonAPITestScript.ViewBookingTestScript">
        <test-method is-config="true" signature="bookingViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewBookingTestScript@1b11171f]" started-at="2025-06-26T15:25:27Z" name="bookingViewSetUp" finished-at="2025-06-26T15:25:27Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in booking view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in booking view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ViewBookingTestScript.bookingViewSetUp(ViewBookingTestScript.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingViewSetUp -->
        <test-method signature="bookingViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewBookingTestScript@1b11171f]" started-at="2025-06-26T15:25:27Z" name="bookingViewTest" data-provider="getBookingViewData" finished-at="2025-06-26T15:25:27Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[bookingview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bookingview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "booking_id":101,
    "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Booking details retrieved successfully",
  "data": {
    "booking_id": 101,
    "order_id": 5244,
    "delivery_datetime": "2025-06-10 14:00:00",
    "booking_datetime": "2025-06-26 12:23:40",
    "customer_name": "John Doe",
    "customer_mobile": "9876543210",
    "total_bill_amount": 204.02,
    "advance_paid_amount": 100.0,
    "pending_bill_amount": 104.02,
    "status": "pending",
    "menu_items": [
      {
        "menu_id": 56,
        "menu_name": "Chicken tandoor",
        "quantity": 2,
        "price": 100.0,
        "portion_name": "Half",
        "special_note": "Extra spicy"
      }
    ],
    "special_message": "Birthday celebration",
    "comment": "Please arrange cake and decorations"
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewBookingTestScript -->
      <class name="com.menumitratCommonAPITestScript.ContinueChatTestScript">
        <test-method is-config="true" signature="continueChatSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ContinueChatTestScript@5d0a1059]" started-at="2025-06-26T15:25:08Z" name="continueChatSetUp" finished-at="2025-06-26T15:25:08Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in continue chat setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in continue chat setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ContinueChatTestScript.continueChatSetUp(ContinueChatTestScript.java:89)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueChatSetUp -->
        <test-method signature="continueChatTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ContinueChatTestScript@5d0a1059]" started-at="2025-06-26T15:25:08Z" name="continueChatTest" data-provider="getContinueChatData" finished-at="2025-06-26T15:25:08Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[continuechat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[continuechat_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify continue chat]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "ticket_id": "4",
    "user_id": "2",
    "message": "I need an update on my issue.",
    "flag": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Chat message added successfully",
    "ticket_chat_id": 5
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueChatTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ContinueChatTestScript -->
      <class name="com.menumitratCommonAPITestScript.DeleteTemplatesTestScript">
        <test-method is-config="true" signature="deleteTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.DeleteTemplatesTestScript@485966cc]" started-at="2025-06-26T15:25:08Z" name="deleteTemplatesSetUp" finished-at="2025-06-26T15:25:08Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in delete templates setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in delete templates setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.DeleteTemplatesTestScript.deleteTemplatesSetUp(DeleteTemplatesTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTemplatesSetUp -->
        <test-method signature="deleteTemplatesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DeleteTemplatesTestScript@485966cc]" started-at="2025-06-26T15:25:08Z" name="deleteTemplatesTest" data-provider="getDeleteTemplatesData" finished-at="2025-06-26T15:25:08Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[deletetemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[deletetemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Delete Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "template_id":"3"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTemplatesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.DeleteTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.SelectTemplateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@43dac38f]" started-at="2025-06-26T15:25:07Z" name="setup" finished-at="2025-06-26T15:25:07Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SelectTemplateTestScript.setup(SelectTemplateTestScript.java:147)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="selectTemplateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@43dac38f]" started-at="2025-06-26T15:25:07Z" name="selectTemplateNegativeTest" data-provider="getSelectTemplateNegativeData" finished-at="2025-06-26T15:25:07Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[selecttemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[selecttemplate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify  template_id using invalid template id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"17",
    "template_id":"1001"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"QR template not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTemplateNegativeTest -->
        <test-method signature="selectTemplateUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@43dac38f]" started-at="2025-06-26T15:25:07Z" name="selectTemplateUsingValidInputData" data-provider="getSelectTemplateData" finished-at="2025-06-26T15:25:07Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[selecttemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[selecttemplate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify select template]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"17",
    "template_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTemplateUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@43dac38f]" started-at="2025-06-26T15:25:07Z" name="tearDown" finished-at="2025-06-26T15:25:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.SelectTemplateTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTemplates">
        <test-method is-config="true" signature="getTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplates@71a8adcf]" started-at="2025-06-26T15:25:22Z" name="getTemplatesSetUp" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get templates setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get templates setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetTemplates.getTemplatesSetUp(GetTemplates.java:92)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplatesSetUp -->
        <test-method signature="verifyTemplates(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplates@71a8adcf]" started-at="2025-06-26T15:25:22Z" name="verifyTemplates" data-provider="getTemplatesData" finished-at="2025-06-26T15:25:22Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getTemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getTemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTemplates -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTemplates -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript">
        <test-method is-config="true" signature="menuCategoryDeleteSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@4f2b503c]" started-at="2025-06-26T15:25:05Z" name="menuCategoryDeleteSetUp" finished-at="2025-06-26T15:25:05Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category delete setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category delete setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript.menuCategoryDeleteSetUp(MenuCategoryDeleteTestScript.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryDeleteSetUp -->
        <test-method signature="menuCategoryListDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@4f2b503c]" started-at="2025-06-26T15:25:05Z" name="menuCategoryListDeleteNegativeTest" data-provider="getMenuCategoryListDeleteNegativeData" finished-at="2025-06-26T15:25:05Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorydelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorydelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "menu_cat_id": "4", "user_id": "2", "outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListDeleteNegativeTest -->
        <test-method signature="menuCategoryListDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@4f2b503c]" started-at="2025-06-26T15:25:05Z" name="menuCategoryListDeleteNegativeTest" data-provider="getMenuCategoryListDeleteNegativeData" finished-at="2025-06-26T15:25:05Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorydelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorydelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid menu_cat_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_cat_id": "", "user_id": "2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["detail":"Please provide menu_cat_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListDeleteNegativeTest -->
        <test-method signature="verifyMenuCategoryDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@4f2b503c]" started-at="2025-06-26T15:25:05Z" name="verifyMenuCategoryDelete" data-provider="getMenuCategoryDeleteData" finished-at="2025-06-26T15:25:05Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorydelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorydelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id":"4",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Category deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateMenuQuantity">
        <test-method is-config="true" signature="updateMenuQuantitySetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@1b2abca6]" started-at="2025-06-26T15:25:06Z" name="updateMenuQuantitySetUp" finished-at="2025-06-26T15:25:06Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update menu quantity setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update menu quantity setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UpdateMenuQuantity.updateMenuQuantitySetUp(UpdateMenuQuantity.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenuQuantitySetUp -->
        <test-method signature="verifyUpdateMenuQuantity(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@1b2abca6]" started-at="2025-06-26T15:25:06Z" name="verifyUpdateMenuQuantity" data-provider="getUpdateMenuQuantityData" finished-at="2025-06-26T15:25:06Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatemenuquantity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatemenuquantity_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update menu quantity]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1",
    "quantity":"3",
    "menu_id":"13",
    "user_id":"2"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "order_details": {
        "order_id": 2,
        "order_number": "2",
        "table_number": [
            "76"
        ],
        "order_status": "cooking",
        "menu_count": 1,
        "total_bill_amount": 4500.0,
        "total_bill_with_discount": 4500.0,
        "service_charges_percent": 1.0,
        "service_charges_amount": 45.0,
        "gst_percent": 1.0,
        "gst_amount": 45.0,
        "discount_percent": 0.0,
        "discount_amount": 0.0,
        "grand_total": 4590.0,
        "datetime": "02-May-2025 01:11:58 PM"
    },
    "menu_details": [
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 25,
            "offer": 0,
            "menu_sub_total": 4500.0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateMenuQuantity -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateMenuQuantity -->
      <class name="com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript">
        <test-method is-config="true" signature="updateProfileDetailSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@1de76cc7]" started-at="2025-06-26T15:25:08Z" name="updateProfileDetailSetUp" finished-at="2025-06-26T15:25:08Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.updateProfileDetailSetUp(UpdateProfileDetailTestScript.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailSetUp -->
        <test-method signature="verifyUpdateProfileDetail(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@1de76cc7]" started-at="2025-06-26T15:25:09Z" name="verifyUpdateProfileDetail" data-provider="getUpdateProfileDetailData" finished-at="2025-06-26T15:25:09Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify update Profile Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "update_user_id":"2",
    "user_id": "3",  
    "name": "Vaibhav",  
    "email": "ssoo@gmail.com",  
    "mobile_number": "6260035759",  
    "dob": "06 oct 1990",
    "aadhar_number":"856932014785"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Profile updated successfully",
    "user_id": 3,
    "name": "komal",
    "email": "ssoo@gmail.com",
    "mobile": "6260035759",
    "dob": "06 Oct 1990",
    "aadhar_number": "856932014785"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateProfileDetail -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript -->
      <class name="com.menumitratCommonAPITestScript.SplitTableTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SplitTableTestScript@27462a88]" started-at="2025-06-26T15:25:22Z" name="setup" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SplitTableTestScript.setup(SplitTableTestScript.java:132)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="splitTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SplitTableTestScript@27462a88]" started-at="2025-06-26T15:25:23Z" name="splitTable" data-provider="getSplitTableData" finished-at="2025-06-26T15:25:23Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[splittable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[splittable_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "section_id": "481", 
    "primary_table_id": 890,
    "split_count": 2,
    "user_id": 2,
    "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Table split successfully",
  "primary_table_id": 890,
  "primary_table_number": 785,
  "new_splits_count": 2,
  "total_splits_count": 2,
  "all_sub_tables": [
    {
      "sub_table_name": "785A",
      "capacity": 2
    },
    {
      "sub_table_name": "785B",
      "capacity": 2
    }
  ],
  "total_capacity": 4
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splitTable -->
      </class> <!-- com.menumitratCommonAPITestScript.SplitTableTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetAvailableTablesTestScript">
        <test-method is-config="true" signature="getAvailableTablesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@3cebbb30]" started-at="2025-06-26T15:25:19Z" name="getAvailableTablesSetUp" finished-at="2025-06-26T15:25:19Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get available tables setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get available tables setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetAvailableTablesTestScript.getAvailableTablesSetUp(GetAvailableTablesTestScript.java:91)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesSetUp -->
        <test-method signature="getAvailableTablesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@3cebbb30]" started-at="2025-06-26T15:25:21Z" name="getAvailableTablesTest" data-provider="getAvailableTablesData" finished-at="2025-06-26T15:25:21Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getavailabletables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getavailabletables_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Available Tables]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2",
    "outlet_id":"1",
    "section_id":"17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Available tables retrieved successfully",
    "tables": [
        {
            "table_id": 3,
            "table_number": 3
        },
        {
            "table_id": 4,
            "table_number": 4
        },
        {
            "table_id": 5,
            "table_number": 5
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetAvailableTablesTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@5a56cdac]" started-at="2025-06-26T15:25:09Z" name="setup" finished-at="2025-06-26T15:25:09Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Setup failed: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Setup failed: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.TableDeleteTestScript.setup(TableDeleteTestScript.java:173)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="tableDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@5a56cdac]" started-at="2025-06-26T15:25:10Z" name="tableDeleteNegativeTest" data-provider="getTableDeleteNegativeData" finished-at="2025-06-26T15:25:10Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting table delete negative test data: No valid table delete negative test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting table delete negative test data: No valid table delete negative test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getting table delete negative test data: No valid table delete negative test data found after filtering
	at com.menumitratCommonAPITestScript.TableDeleteTestScript.getTableDeleteNegativeData(TableDeleteTestScript.java:313)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableDeleteNegativeTest -->
        <test-method signature="verifyTableDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@5a56cdac]" started-at="2025-06-26T15:25:10Z" name="verifyTableDelete" data-provider="getTableDeleteData" finished-at="2025-06-26T15:25:10Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[tabledelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tabledelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "section_id": "17",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "outlet table deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.TableDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.TotalTicketsTestScript">
        <test-method is-config="true" signature="totalTicketsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TotalTicketsTestScript@7c711375]" started-at="2025-06-26T15:25:10Z" name="totalTicketsSetUp" finished-at="2025-06-26T15:25:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in total tickets setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in total tickets setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.TotalTicketsTestScript.totalTicketsSetUp(TotalTicketsTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalTicketsSetUp -->
        <test-method signature="totalTicketsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TotalTicketsTestScript@7c711375]" started-at="2025-06-26T15:25:10Z" name="totalTicketsTest" data-provider="getTotalTicketsData" finished-at="2025-06-26T15:25:10Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[totaltickets]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[totaltickets_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify total ticket ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Total tickets of outlet 1",
    "total_tickets": 3,
    "open_tickets": 1,
    "closed_tickets": 0,
    "wip_tickets": 2,
    "rejected_tickets": 0
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalTicketsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TotalTicketsTestScript -->
      <class name="com.menumitratCommonAPITestScript.UdhariLedgerUpdateTestScript">
        <test-method is-config="true" signature="udhariLedgerUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerUpdateTestScript@4310d43]" started-at="2025-06-26T15:25:25Z" name="udhariLedgerUpdateSetUp" finished-at="2025-06-26T15:25:25Z" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerUpdateSetUp -->
        <test-method signature="udhariLedgerUpdateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerUpdateTestScript@4310d43]" started-at="2025-06-26T15:25:25Z" name="udhariLedgerUpdateTest" data-provider="getUdhariLedgerUpdateData" finished-at="2025-06-26T15:25:26Z" duration-ms="99" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[udhariledgerupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[udhariledgerupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2,
    "ledger_id":2,
   "settle_amount": 17.31
   
  
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Udhari ledger updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in Udhari Ledger Update test: Status code mismatch - Expected: 200, Actual: 401, Response Body: {"detail":"Error with token: Not enough segments"}]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in Udhari Ledger Update test: Status code mismatch - Expected: 200, Actual: 401, Response Body: {"detail":"Error with token: Not enough segments"}
	at com.menumitratCommonAPITestScript.UdhariLedgerUpdateTestScript.udhariLedgerUpdateTest(UdhariLedgerUpdateTestScript.java:247)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerUpdateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UdhariLedgerUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableListTestScript">
        <test-method is-config="true" signature="TableListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TableListTestScript@1e1a0406]" started-at="2025-06-26T15:25:19Z" name="TableListViewSetUp" finished-at="2025-06-26T15:25:19Z" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TableListViewSetUp -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListTestScript@1e1a0406]" started-at="2025-06-26T15:25:19Z" name="verifyTableListView" data-provider="getTableListData" finished-at="2025-06-26T15:25:19Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "user_id":2,
 "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": [
    {
      "section_name": "English",
      "section_id": 292,
      "tables": [
        {
          "table_ids": [
            211,
            212
          ],
          "table_numbers": [
            205,
            206
          ],
          "outlet_id": 1,
          "is_reserved": false,
          "is_joined": true,
          "total_capacity": 8,
          "is_split": false,
          "is_occupied": 0,
          "occupied_time": null,
          "grand_total": null,
          "order_id": null,
          "order_number": null,
          "action": null,
          "order_payment_settle_type": null,
          "payment_method": null
        }
      ]
    }
  ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.TableListTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript">
        <test-method is-config="true" signature="updateActiveStatusSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@37d4349f]" started-at="2025-06-26T15:25:10Z" name="updateActiveStatusSetUp" finished-at="2025-06-26T15:25:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update active status setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update active status setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript.updateActiveStatusSetUp(UpdateActiveStatusTestScript.java:83)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusSetUp -->
        <test-method signature="updateActiveStatusTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@37d4349f]" started-at="2025-06-26T15:25:11Z" name="updateActiveStatusTest" data-provider="getUpdateActiveStatusData" finished-at="2025-06-26T15:25:11Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateactivestatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateactivestatus_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update Active status]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "type":"menu_category",
    "id":"4",
    "is_active":true

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu_category status updated successfully",
    "data": {
        "is_active": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateOrderTestScript">
        <test-method is-config="true" signature="updateOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@67f639d3]" started-at="2025-06-26T15:25:21Z" name="updateOrderSetUp" finished-at="2025-06-26T15:25:21Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update order setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update order setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UpdateOrderTestScript.updateOrderSetUp(UpdateOrderTestScript.java:84)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOrderSetUp -->
        <test-method signature="updateDineInOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@67f639d3]" started-at="2025-06-26T15:25:22Z" name="updateDineInOrder" data-provider="getUpdateDineInOrderData" finished-at="2025-06-26T15:25:22Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderdineIn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update order dine-in Order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2", "order_id":"20",
  "tables": [78],
  "section_id": 17,
  "order_type": "dine-in",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 3,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDineInOrder -->
        <test-method signature="updateDeliveryOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@67f639d3]" started-at="2025-06-26T15:25:22Z" name="updateDeliveryOrder" data-provider="getUpdateDeliveryOrderData" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatedeliveryorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatedeliveryorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify update order delivery]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  "order_id":"21",
  "order_type": "delivery",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 3,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDeliveryOrder -->
        <test-method signature="updateParcelOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@67f639d3]" started-at="2025-06-26T15:25:22Z" name="updateParcelOrder" data-provider="getUpdateParcelOrderData" finished-at="2025-06-26T15:25:22Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderparcel]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Updateorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update order parcel]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  "order_id":"22",
  "order_type": "parcel",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 4,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateParcelOrder -->
        <test-method signature="updateDriveThroughOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@67f639d3]" started-at="2025-06-26T15:25:22Z" name="updateDriveThroughOrder" data-provider="getUpdateDriveThroughOrderData" finished-at="2025-06-26T15:25:22Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderdrivethrough]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateorder_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify update order drive-through]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": 2,
   "order_id":"19",
  "order_type": "drive-through",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 2,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDriveThroughOrder -->
        <test-method signature="updateCounterOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@67f639d3]" started-at="2025-06-26T15:25:22Z" name="updateCounterOrder" data-provider="getUpdateCounterOrderData" finished-at="2025-06-26T15:25:22Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateordercounter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[upupdatecounterorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update Counter order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": 2,
  "order_id":"24",
  "order_type": "counter",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 2,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCounterOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainUpdateTestScript">
        <test-method is-config="true" signature="captainUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@741a8937]" started-at="2025-06-26T15:25:04Z" name="captainUpdateSetUp" finished-at="2025-06-26T15:25:04Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain update setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain update setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.CaptainUpdateTestScript.captainUpdateSetUp(CaptainUpdateTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateSetUp -->
        <test-method signature="captainUpdateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@741a8937]" started-at="2025-06-26T15:25:04Z" name="captainUpdateTest" data-provider="getCaptainUpdateData" finished-at="2025-06-26T15:25:04Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":2,
 "user_id":20,
 "outlet_id":"1",
 "name":"ramucaptain",
 "mobile":"8898989898",
 "address":"satara",
 "aadhar_number":"343332322321",
 "dob":"12 Jan 2023",
 "email":"h@gmail.com",
 "app_source":"captain_app",
 "functionality_ids":[1,2,3,4,7]

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Captain updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCreateTestScript@25fb8912]" started-at="2025-06-26T15:25:01Z" name="setup" finished-at="2025-06-26T15:25:01Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.InventoryCreateTestScript.setup(InventoryCreateTestScript.java:157)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCreateTestScript@25fb8912]" started-at="2025-06-26T15:25:02Z" name="createInventory" data-provider="getInventoryCreateData" finished-at="2025-06-26T15:25:02Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": 1,
    "name": "Rice",
    "sub_category_id": 1,
    "unit": "kg",
    "purchase_price": 50.00,
    "quantity": 100,
    "min_threshold_quantity": 20,
    "is_repeat": true,
    "repeat_frequency": "monthly",
    "repeat_frequency_value": 1,
    "description": "Premium Basmati Rice",
    "tax_type": "GST",
    "tax_rate": 5.00,
"expiry_date": "31 Dec 2025"                }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Inventory item created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInventory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SelectOutletTestScript">
        <test-method is-config="true" signature="selectOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@342c38f8]" started-at="2025-06-26T15:25:07Z" name="selectOutletSetUp" finished-at="2025-06-26T15:25:07Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in select outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in select outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SelectOutletTestScript.selectOutletSetUp(SelectOutletTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletSetUp -->
        <test-method signature="selectOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@342c38f8]" started-at="2025-06-26T15:25:08Z" name="selectOutletNegativeTest" data-provider="getSelectOutletNegativeData" finished-at="2025-06-26T15:25:08Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[SelectOutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SelectOutlet_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid outlet selection with missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "owner_id": "2"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletNegativeTest -->
        <test-method signature="selectOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@342c38f8]" started-at="2025-06-26T15:25:08Z" name="selectOutletNegativeTest" data-provider="getSelectOutletNegativeData" finished-at="2025-06-26T15:25:08Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[SelectOutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SelectOutlet_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid outlet selection with both fields missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "owner_id": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletNegativeTest -->
        <test-method signature="selectOutletTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@342c38f8]" started-at="2025-06-26T15:25:08Z" name="selectOutletTest" data-provider="getSelectOutletData" finished-at="2025-06-26T15:25:08Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[SelectOutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SelectOutlet_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verfiy Select Outlet ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "owner_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet selected successfully",
    "owner_data": {
        "owner_name": "Heena",
        "user_id": 2,
        "role": "owner",
        "outlet_name": "spicy world",
        "outlet_id": 2,
        "mobile": "9898989899",
        "outlet_status": true,
        "order_number_sequence": "since_opening",
        "gst": "18",
        "service_charges": "5",
        "outlet_upi": null,
        "image": null,
        "is_open": true,
        "outlet_address": "456 Second Street, City"
    },
    "settings": {
        "style": "blue",
        "has_dine_in": true,
        "has_parcel": true,
        "has_counter": true,
        "has_delivery": true,
        "has_drive_through": false,
        "print_and_save": true,
        "KOT_and_save": true,
        "settle": true,
        "reserve_table": true,
        "cancel": true,
        "POS_show_menu_image": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SelectOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.sectionCreateTestScript">
        <test-method is-config="true" signature="sectionCreateSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@58695725]" started-at="2025-06-26T15:25:00Z" name="sectionCreateSetup" finished-at="2025-06-26T15:25:00Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.sectionCreateTestScript.sectionCreateSetup(sectionCreateTestScript.java:148)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionCreateSetup -->
        <test-method signature="verifySectionUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@58695725]" started-at="2025-06-26T15:25:00Z" name="verifySectionUsingValidInputData" data-provider="getSectionCreatePositiveInputData" finished-at="2025-06-26T15:25:00Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectioncreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify section create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": 1,
    "user_id":2,
    "section_name": "Family",
  "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Outlet Section and 5 tables created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@58695725]" started-at="2025-06-26T15:25:00Z" name="tearDown" finished-at="2025-06-26T15:25:00Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ForceCancelOrderTestScript">
        <test-method is-config="true" signature="forceCancelOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@1e04fa0a]" started-at="2025-06-26T15:24:58Z" name="forceCancelOrderSetUp" finished-at="2025-06-26T15:24:58Z" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderSetUp -->
        <test-method signature="forceCancelOrderTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@1e04fa0a]" started-at="2025-06-26T15:24:58Z" name="forceCancelOrderTest" data-provider="getForceCancelOrderData" finished-at="2025-06-26T15:24:58Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[forcecancelorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[forcecancelorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify force cancel order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id":"6",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Order cancelled successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in force cancel order test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in force cancel order test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ForceCancelOrderTestScript.forceCancelOrderTest(ForceCancelOrderTestScript.java:221)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ForceCancelOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.RemoveTemplateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@6fd83fc1]" started-at="2025-06-26T15:25:04Z" name="setup" finished-at="2025-06-26T15:25:04Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.RemoveTemplateTestScript.setup(RemoveTemplateTestScript.java:157)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="removeTemplate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@6fd83fc1]" started-at="2025-06-26T15:25:05Z" name="removeTemplate" data-provider="getRemoveTemplateData" finished-at="2025-06-26T15:25:05Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[removetemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[removetemplate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Remove Template]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTemplate -->
        <test-method signature="removeTemplate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@6fd83fc1]" started-at="2025-06-26T15:25:05Z" name="removeTemplate" data-provider="getRemoveTemplateData" finished-at="2025-06-26T15:25:05Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[removetemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[removetemplate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Invalid section id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"1010"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Section not found" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTemplate -->
        <test-method signature="removeTemplateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@6fd83fc1]" started-at="2025-06-26T15:25:05Z" name="removeTemplateNegativeTest" data-provider="getRemoveTemplateNegativeData" finished-at="2025-06-26T15:25:05Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting remove template negative test data: No valid remove template negative test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting remove template negative test data: No valid remove template negative test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getting remove template negative test data: No valid remove template negative test data found after filtering
	at com.menumitratCommonAPITestScript.RemoveTemplateTestScript.getRemoveTemplateNegativeData(RemoveTemplateTestScript.java:276)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTemplateNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.RemoveTemplateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ViewOutletTestScript">
        <test-method is-config="true" signature="viewOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@66d3eec0]" started-at="2025-06-26T15:24:58Z" name="viewOutletSetUp" finished-at="2025-06-26T15:24:58Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletSetUp -->
        <test-method signature="verifyViewOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@66d3eec0]" started-at="2025-06-26T15:24:58Z" name="verifyViewOutlet" data-provider="getViewOutletData" finished-at="2025-06-26T15:24:58Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view Outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Successfully retrieved outlet details",
    "data": {
        "owner_id": 2,
        "owner_name": "Heena",
        "total_category": 0,
        "total_menu": 0,
        "total_order": 0,
        "total_completed_orders": 0,
        "total_cancelled_orders": 0,
        "total_active_menu": 0,
        "total_inactive_menu": 0,
        "total_active_category": 0,
        "total_inactive_category": 0,
        "total_active_section": 0,
        "total_inactive_section": 0,
        "name": "spicy world",
        "outlet_type": "mess",
        "fssainumber": "None",
        "gstnumber": null,
        "mobile": "9898989899",
        "veg_nonveg": "nonveg",
        "service_charges": "5",
        "gst": "18",
        "address": "456 Second Street, City",
        "is_open": true,
        "upi_id": null,
        "whatsapp": null,
        "facebook": null,
        "instagram": null,
        "website": null,
        "google_review": null,
        "google_business_link": null,
        "opening_time": "10:00",
        "closing_time": "23:00",
        "image": null,
        "outlet_status": true,
        "order_number_sequence": "since_opening",
        "created_on": "26 Apr 2025 09:17:23 AM",
        "created_by": null,
        "updated_by": null,
        "updated_on": null
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problems: 
	The method setOutlet_id(String) is undefined for the type InventoryRequest
	The method setUser_id(String) is undefined for the type InventoryRequest
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problems: 
	The method setOutlet_id(String) is undefined for the type InventoryRequest
	The method setUser_id(String) is undefined for the type InventoryRequest

	at com.menumitratCommonAPITestScript.ViewOutletTestScript.verifyViewOutlet(ViewOutletTestScript.java:207)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.OutletTypeTestScript">
        <test-method is-config="true" signature="outletTypeSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OutletTypeTestScript@550dbc7a]" started-at="2025-06-26T15:25:18Z" name="outletTypeSetUp" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in outlet type setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in outlet type setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.OutletTypeTestScript.outletTypeSetUp(OutletTypeTestScript.java:92)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletTypeSetUp -->
        <test-method signature="verifyOutletType(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletTypeTestScript@550dbc7a]" started-at="2025-06-26T15:25:18Z" name="verifyOutletType" data-provider="getOutletTypeData" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[outlettype]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[outlettype_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Outlet Type]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Successfully retrieved outlet types",
    "outlet_type_list": {
        "outlet": "outlet",
        "hotel": "hotel",
        "mess": "mess",
        "canteen": "canteen",
        "cafe": "cafe"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOutletType -->
      </class> <!-- com.menumitratCommonAPITestScript.OutletTypeTestScript -->
      <class name="com.menumitratCommonAPITestScript.SectionViewTestScript">
        <test-method is-config="true" signature="sectionViewSetup()[pri:0, instance:com.menumitratCommonAPITestScript.SectionViewTestScript@4fb3ee4e]" started-at="2025-06-26T15:25:01Z" name="sectionViewSetup" finished-at="2025-06-26T15:25:01Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SectionViewTestScript.sectionViewSetup(SectionViewTestScript.java:152)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionViewSetup -->
        <test-method signature="verifySectionViewUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.SectionViewTestScript@4fb3ee4e]" started-at="2025-06-26T15:25:01Z" name="verifySectionViewUsingValidInputData" data-provider="getSectionViewPositiveInputData" finished-at="2025-06-26T15:25:01Z" duration-ms="4" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify section view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "user_id":2,
    "section_id":17,
  "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "data": {
    "section_id": 17,
    "section_name": "Family",
    "outlet_id": 1
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionViewUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.SectionViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTableListTestScript">
        <test-method is-config="true" signature="TableListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@618425b5]" started-at="2025-06-26T15:24:59Z" name="TableListViewSetUp" finished-at="2025-06-26T15:25:00Z" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TableListViewSetUp -->
        <test-method signature="tableListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@618425b5]" started-at="2025-06-26T15:25:00Z" name="tableListViewNegativeTest" data-provider="getTableListViewNegativeData" finished-at="2025-06-26T15:25:00Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettablelistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify table list view with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "-1", "section_id": "17" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID does not exist."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: 
	The method setSection_id(int) in the type TableRequest is not applicable for the arguments (String)
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: 
	The method setSection_id(int) in the type TableRequest is not applicable for the arguments (String)

	at com.menumitratCommonAPITestScript.GetTableListTestScript.tableListViewNegativeTest(GetTableListTestScript.java:288)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableListViewNegativeTest -->
        <test-method signature="tableListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@618425b5]" started-at="2025-06-26T15:25:00Z" name="tableListViewNegativeTest" data-provider="getTableListViewNegativeData" finished-at="2025-06-26T15:25:00Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettablelistview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify table list view with missing section_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "section_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Please provide section_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: 
	The method setSection_id(int) in the type TableRequest is not applicable for the arguments (String)
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: 
	The method setSection_id(int) in the type TableRequest is not applicable for the arguments (String)

	at com.menumitratCommonAPITestScript.GetTableListTestScript.tableListViewNegativeTest(GetTableListTestScript.java:288)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableListViewNegativeTest -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@618425b5]" started-at="2025-06-26T15:25:00Z" name="verifyTableListView" data-provider="getTableListData" finished-at="2025-06-26T15:25:00Z" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "section_id": "17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "section_id": "17"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: 
	The method setSection_id(int) in the type TableRequest is not applicable for the arguments (String)
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: 
	The method setSection_id(int) in the type TableRequest is not applicable for the arguments (String)

	at com.menumitratCommonAPITestScript.GetTableListTestScript.verifyTableListView(GetTableListTestScript.java:180)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTableListTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryUpdateTestScript@36916eb0]" started-at="2025-06-26T15:25:18Z" name="setup" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.InventoryUpdateTestScript.setup(InventoryUpdateTestScript.java:196)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryUpdateTestScript@36916eb0]" started-at="2025-06-26T15:25:18Z" name="updateInventory" data-provider="getInventoryUpdateData" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[put]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{    
    "user_id":"2",
    "inventory_id":"7",
    "supplier_id": "8",
    "outlet_id": "1",
    "category_id": "1",
    "name": "floran",
    "description": "Fresh Roma tomatoes",
    "unit_price": "100",
    "quantity": "100",
    "unit_of_measure": "kg",
    "reorder_level": "20",
    "brand_name": "FreshFarms",
    "tax_rate": "1",
    "in_or_out": "in",
   "in_date": "",        
    "expiration_date": "" 
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Inventory updated successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInventory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ListViewBookingTestScript">
        <test-method is-config="true" signature="bookingListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ListViewBookingTestScript@27f981c6]" started-at="2025-06-26T15:25:27Z" name="bookingListViewSetUp" finished-at="2025-06-26T15:25:27Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in booking list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in booking list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ListViewBookingTestScript.bookingListViewSetUp(ListViewBookingTestScript.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingListViewSetUp -->
        <test-method signature="bookingListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ListViewBookingTestScript@27f981c6]" started-at="2025-06-26T15:25:27Z" name="bookingListViewTest" data-provider="getBookingListViewData" finished-at="2025-06-26T15:25:27Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[bookinglistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bookinglistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "app_source":"owner_app",
    "outlet_id":1,
    "start_date": "02 Jun 2025",
    "end_date": "15 Jun 2025"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Bookings retrieved successfully",
  "data": {
    "total": 17,
    "bookings": [
      {
        "booking_id": 7,
        "order_id": 1357,
        "order_number": "1042",
        "delivery_datetime": "12 Jun 2025 08:34:00 AM",
        "booking_datetime": "05 Jun 2025 13:13:01 PM",
        "customer_name": "Bxjdjdj",
        "customer_mobile": "9565686566",
        "total_bill_amount": 102.01,
        "advance_paid_amount": 0.0,
        "pending_bill_amount": 102.01,
        "booking_status": "cancelled",
        "special_message": "Bchjd",
        "comment": "Dhhfjfjf",
        "menu_items": [
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 1,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": ""
          }
        ],
        "expected_datetime": "18 Jun 2025 10:34:00 AM"
      },
      {
        "booking_id": 1,
        "order_id": 1316,
        "order_number": "1001",
        "delivery_datetime": "10 Jun 2025 14:00:00 PM",
        "booking_datetime": "04 Jun 2025 15:09:34 PM",
        "customer_name": "John Doe",
        "customer_mobile": "9876543210",
        "total_bill_amount": 204.02,
        "advance_paid_amount": 204.02,
        "pending_bill_amount": 0.0,
        "booking_status": "settled",
        "special_message": "Birthday celebration",
        "comment": "Please arrange cake and decorations",
        "menu_items": [
          {
            "menu_id": 11,
            "menu_name": "Lemon Ricee",
            "quantity": 2,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": "Extra spicy"
          }
        ],
        "expected_datetime": "10 Jun 2025 14:30:00 PM"
      },
      {
        "booking_id": 101,
        "order_id": 5244,
        "order_number": "2245",
        "delivery_datetime": "10 Jun 2025 14:00:00 PM",
        "booking_datetime": "26 Jun 2025 12:23:40 PM",
        "customer_name": "John Doe",
        "customer_mobile": "9876543210",
        "total_bill_amount": 204.02,
        "advance_paid_amount": 100.0,
        "pending_bill_amount": 104.02,
        "booking_status": "pending",
        "special_message": "Birthday celebration",
        "comment": "Please arrange cake and decorations",
        "menu_items": [
          {
            "menu_id": 56,
            "menu_name": "Chicken tandoor",
            "quantity": 2,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": "Extra spicy"
          }
        ],
        "expected_datetime": "10 Jun 2025 14:30:00 PM"
      },
      {
        "booking_id": 100,
        "order_id": 5243,
        "order_number": "2244",
        "delivery_datetime": "10 Jun 2025 14:00:00 PM",
        "booking_datetime": "26 Jun 2025 12:10:42 PM",
        "customer_name": "John Doe",
        "customer_mobile": "9876543210",
        "total_bill_amount": 204.02,
        "advance_paid_amount": 100.0,
        "pending_bill_amount": 104.02,
        "booking_status": "pending",
        "special_message": "Birthday celebration",
        "comment": "Please arrange cake and decorations",
        "menu_items": [
          {
            "menu_id": 56,
            "menu_name": "Chicken tandoor",
            "quantity": 2,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": "Extra spicy"
          }
        ],
        "expected_datetime": "10 Jun 2025 14:30:00 PM"
      },
      {
        "booking_id": 99,
        "order_id": 5242,
        "order_number": "2243",
        "delivery_datetime": "10 Jun 2025 14:00:00 PM",
        "booking_datetime": "26 Jun 2025 12:10:00 PM",
        "customer_name": "John Doe",
        "customer_mobile": "9876543210",
        "total_bill_amount": 204.02,
        "advance_paid_amount": 100.0,
        "pending_bill_amount": 104.02,
        "booking_status": "pending",
        "special_message": "Birthday celebration",
        "comment": "Please arrange cake and decorations",
        "menu_items": [
          {
            "menu_id": 11,
            "menu_name": "Lemon Ricee",
            "quantity": 2,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": "Extra spicy"
          }
        ],
        "expected_datetime": "10 Jun 2025 14:30:00 PM"
      },
      {
        "booking_id": 73,
        "order_id": 5112,
        "order_number": "2233",
        "delivery_datetime": "10 Jun 2025 14:00:00 PM",
        "booking_datetime": "23 Jun 2025 16:36:34 PM",
        "customer_name": "John Doe",
        "customer_mobile": "9876543210",
        "total_bill_amount": 102.01,
        "advance_paid_amount": 100.0,
        "pending_bill_amount": 2.01,
        "booking_status": "pending",
        "special_message": "Birthday celebration",
        "comment": "Please arrange cake and decorations",
        "menu_items": [
          {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "quantity": 1,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": "No onions"
          }
        ],
        "expected_datetime": "10 Jun 2025 14:30:00 PM"
      },
      {
        "booking_id": 2,
        "order_id": 1319,
        "order_number": "1004",
        "delivery_datetime": "09 Jun 2025 21:30:00 PM",
        "booking_datetime": "04 Jun 2025 15:24:15 PM",
        "customer_name": "John Doe",
        "customer_mobile": "9876543210",
        "total_bill_amount": 1020.1,
        "advance_paid_amount": 100.0,
        "pending_bill_amount": 920.1,
        "booking_status": "pending",
        "special_message": "Birthday celebration",
        "comment": "Please arrange cake and decorations",
        "menu_items": [
          {
            "menu_id": 11,
            "menu_name": "Lemon Ricee",
            "quantity": 10,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": "Extra spicy"
          }
        ],
        "expected_datetime": "04 Jun 2025 04:24:00 AM"
      },
      {
        "booking_id": 13,
        "order_id": 1414,
        "order_number": "1001",
        "delivery_datetime": "05 Jun 2025 11:48:00 AM",
        "booking_datetime": "05 Jun 2025 17:20:11 PM",
        "customer_name": "Bxnxnxn",
        "customer_mobile": "8695956595",
        "total_bill_amount": 51.0,
        "advance_paid_amount": 20.0,
        "pending_bill_amount": 31.0,
        "booking_status": "pending",
        "special_message": "Hfhfjff",
        "comment": "Hfhfjfjf",
        "menu_items": [
          {
            "menu_id": 51,
            "menu_name": "testing menu",
            "quantity": 1,
            "price": 50.0,
            "portion_name": "half",
            "special_note": ""
          }
        ],
        "expected_datetime": "05 Jun 2025 11:48:00 AM"
      },
      {
        "booking_id": 4,
        "order_id": 1350,
        "order_number": "1035",
        "delivery_datetime": "05 Jun 2025 10:00:00 AM",
        "booking_datetime": "05 Jun 2025 12:30:50 PM",
        "customer_name": "Testing again",
        "customer_mobile": "8549595995",
        "total_bill_amount": 336.63,
        "advance_paid_amount": 336.63,
        "pending_bill_amount": 0.0,
        "booking_status": "settled",
        "special_message": "Nxjdjxh",
        "comment": "Vdhdjdj",
        "menu_items": [
          {
            "menu_id": 51,
            "menu_name": "testing menu",
            "quantity": 3,
            "price": 50.0,
            "portion_name": "half",
            "special_note": ""
          },
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 1,
            "price": 180.0,
            "portion_name": "Full",
            "special_note": ""
          }
        ],
        "expected_datetime": "06 Jun 2025 09:00:00 AM"
      },
      {
        "booking_id": 3,
        "order_id": 1349,
        "order_number": "1034",
        "delivery_datetime": "05 Jun 2025 09:53:00 AM",
        "booking_datetime": "05 Jun 2025 12:27:45 PM",
        "customer_name": "Test it",
        "customer_mobile": "9565656565",
        "total_bill_amount": 51.0,
        "advance_paid_amount": 49.98,
        "pending_bill_amount": 1.02,
        "booking_status": "pending",
        "special_message": "Name on cake nothing",
        "comment": "Less sweet ",
        "menu_items": [
          {
            "menu_id": 51,
            "menu_name": "testing menu",
            "quantity": 1,
            "price": 50.0,
            "portion_name": "half",
            "special_note": ""
          }
        ],
        "expected_datetime": "07 Jun 2025 16:47:00 PM"
      },
      {
        "booking_id": 12,
        "order_id": 1385,
        "order_number": "1002",
        "delivery_datetime": "05 Jun 2025 09:37:00 AM",
        "booking_datetime": "05 Jun 2025 15:08:07 PM",
        "customer_name": "Create booking",
        "customer_mobile": "9686565665",
        "total_bill_amount": 102.01,
        "advance_paid_amount": 31.21,
        "pending_bill_amount": 70.8,
        "booking_status": "pending",
        "special_message": "Bdjdj",
        "comment": "Jdjfjf",
        "menu_items": [
          {
            "menu_id": 55,
            "menu_name": "Chicken tandoor",
            "quantity": 1,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": ""
          }
        ],
        "expected_datetime": "05 Jun 2025 10:00:00 AM"
      },
      {
        "booking_id": 11,
        "order_id": 1384,
        "order_number": "1001",
        "delivery_datetime": "05 Jun 2025 09:34:00 AM",
        "booking_datetime": "05 Jun 2025 15:05:11 PM",
        "customer_name": "Bakskxjx",
        "customer_mobile": "6898989865",
        "total_bill_amount": 102.01,
        "advance_paid_amount": 50.0,
        "pending_bill_amount": 52.01,
        "booking_status": "pending",
        "special_message": "",
        "comment": "",
        "menu_items": [
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 1,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": ""
          }
        ],
        "expected_datetime": "05 Jun 2025 10:00:00 AM"
      },
      {
        "booking_id": 10,
        "order_id": 1381,
        "order_number": "1066",
        "delivery_datetime": "05 Jun 2025 09:28:00 AM",
        "booking_datetime": "05 Jun 2025 14:59:26 PM",
        "customer_name": "Cbjdjd",
        "customer_mobile": "6565656566",
        "total_bill_amount": 183.62,
        "advance_paid_amount": 0.0,
        "pending_bill_amount": 183.62,
        "booking_status": "pending",
        "special_message": "",
        "comment": "",
        "menu_items": [
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 1,
            "price": 180.0,
            "portion_name": "Full",
            "special_note": ""
          }
        ],
        "expected_datetime": "05 Jun 2025 09:45:00 AM"
      },
      {
        "booking_id": 9,
        "order_id": 1380,
        "order_number": "1065",
        "delivery_datetime": "05 Jun 2025 09:25:00 AM",
        "booking_datetime": "05 Jun 2025 14:56:21 PM",
        "customer_name": "Xbndjd",
        "customer_mobile": "6898956868",
        "total_bill_amount": 183.62,
        "advance_paid_amount": 0.0,
        "pending_bill_amount": 183.62,
        "booking_status": "pending",
        "special_message": "Hdhd",
        "comment": "Bfjfjjf",
        "menu_items": [
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 1,
            "price": 180.0,
            "portion_name": "Full",
            "special_note": ""
          }
        ],
        "expected_datetime": "05 Jun 2025 09:30:00 AM"
      },
      {
        "booking_id": 8,
        "order_id": 1358,
        "order_number": "1043",
        "delivery_datetime": "05 Jun 2025 07:43:00 AM",
        "booking_datetime": "05 Jun 2025 13:15:29 PM",
        "customer_name": "Bdbbd",
        "customer_mobile": "7879898698",
        "total_bill_amount": 183.62,
        "advance_paid_amount": 0.0,
        "pending_bill_amount": 183.62,
        "booking_status": "cancelled",
        "special_message": "Bxhx",
        "comment": "Hchf",
        "menu_items": [
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 1,
            "price": 180.0,
            "portion_name": "Full",
            "special_note": ""
          }
        ],
        "expected_datetime": "05 Jun 2025 07:43:00 AM"
      },
      {
        "booking_id": 6,
        "order_id": 1354,
        "order_number": "1039",
        "delivery_datetime": "05 Jun 2025 07:30:00 AM",
        "booking_datetime": "05 Jun 2025 13:01:53 PM",
        "customer_name": "Hdjfjf",
        "customer_mobile": "9565656566",
        "total_bill_amount": 102.01,
        "advance_paid_amount": 102.01,
        "pending_bill_amount": 0.0,
        "booking_status": "pending",
        "special_message": "Bcncjf",
        "comment": "Hffjfjfjf",
        "menu_items": [
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 1,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": ""
          }
        ],
        "expected_datetime": "06 Jun 2025 11:30:00 AM"
      },
      {
        "booking_id": 14,
        "order_id": 1420,
        "order_number": "1002",
        "delivery_datetime": "05 Jun 2025 07:05:00 AM",
        "booking_datetime": "05 Jun 2025 18:06:05 PM",
        "customer_name": "Notifications ",
        "customer_mobile": "9868686989",
        "total_bill_amount": 204.02,
        "advance_paid_amount": 50.0,
        "pending_bill_amount": 154.02,
        "booking_status": "pending",
        "special_message": "Bcbcjcn",
        "comment": "Fjjfjjf",
        "menu_items": [
          {
            "menu_id": 14,
            "menu_name": "Lemon Ricee",
            "quantity": 2,
            "price": 100.0,
            "portion_name": "Half",
            "special_note": ""
          }
        ],
        "expected_datetime": "05 Jun 2025 13:21:00 PM"
      }
    ]
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ListViewBookingTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterListViewTestScript">
        <test-method is-config="true" signature="waiterListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterListViewTestScript@a530d0a]" started-at="2025-06-26T15:24:55Z" name="waiterListViewSetUp" finished-at="2025-06-26T15:24:55Z" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterListViewSetUp -->
        <test-method signature="waiterListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterListViewTestScript@a530d0a]" started-at="2025-06-26T15:24:55Z" name="waiterListViewTest" data-provider="getWaiterListViewData" finished-at="2025-06-26T15:24:55Z" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
"user_id":2,
 "outlet_id":1 ,
 "app_source":"waiter_app"
   }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Successfully retrieved waiters",
  "data": [
    {
      "outlet_id": 1,
      "user_id": 124,
      "name": "waitvaibhav",
      "mobile": "8237090371",
      "dob": "12 Jan 2023",
      "email": "h@gmail.com",
      "is_active": 1
    }
  ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.supplierViewTestScript">
        <test-method is-config="true" signature="supplierViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7bab3f1a]" started-at="2025-06-26T15:25:18Z" name="supplierViewSetUp" finished-at="2025-06-26T15:25:18Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier view setUp: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.supplierViewTestScript.supplierViewSetUp(supplierViewTestScript.java:175)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewSetUp -->
        <test-method signature="supplierViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7bab3f1a]" started-at="2025-06-26T15:25:19Z" name="supplierViewNegativeTest" data-provider="getSupplierViewNegativeData" finished-at="2025-06-26T15:25:19Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API response when supplier_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", supplier_id:"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Supplier ID is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewNegativeTest -->
        <test-method signature="supplierViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7bab3f1a]" started-at="2025-06-26T15:25:19Z" name="supplierViewNegativeTest" data-provider="getSupplierViewNegativeData" finished-at="2025-06-26T15:25:19Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API response when outlet_id is a special character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "supplier_id": "8", "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewNegativeTest -->
        <test-method signature="verifySupplierView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7bab3f1a]" started-at="2025-06-26T15:25:19Z" name="verifySupplierView" data-provider="getSupplierViewValidData" finished-at="2025-06-26T15:25:19Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "supplier_id":"4",
    "outlet_id": "1"
     
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "supplier_id": 1,
        "outlet_id": 1,
        "name": "Balaji",
        "supplier_status": true,
        "credit_rating": "good",
        "credit_limit": 50000,
        "location": "Mumbai",
        "owner_name": "Heena",
        "supplier_code": null,
        "website": "http://example.com",
        "mobile_number1": "7996543218",
        "mobile_number2": "7993456701",
        "address": "",
        "created_by": "Owner",
        "updated_by": "Owner",
        "created_on": "30 Apr 2025 01:21:21 PM",
        "updated_on": "30 Apr 2025 01:40:39 PM"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySupplierView -->
      </class> <!-- com.menumitratCommonAPITestScript.supplierViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@32502377]" started-at="2025-06-26T15:25:16Z" name="setup" finished-at="2025-06-26T15:25:16Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.StaffCreateTestScript.setup(StaffCreateTestScript.java:178)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createStaff(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@32502377]" started-at="2025-06-26T15:25:17Z" name="createStaff" data-provider="getStaffCreateData" finished-at="2025-06-26T15:25:17Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffcreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid staff creation with all correct fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   "user_id":"2",
    "name":"Ravan", "mobile":"9797454589",
    "dob":"06 Dec 2014",
    "address":"Katraj Pune",
    "role":"cleaner",
    "aadhar_number": "523456789091",
    "outlet_id":"1",                                                                                                                                                                                                                                                                                                                                                                          "image": "C:\Users\hp\Downloads\menus\medu vada.jpg"
} ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "staff_id": 9
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@32502377]" started-at="2025-06-26T15:25:17Z" name="tearDown" finished-at="2025-06-26T15:25:17Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript">
        <test-method is-config="true" signature="defaultUserSettingsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript@4738a206]" started-at="2025-06-26T15:24:57Z" name="defaultUserSettingsSetUp" finished-at="2025-06-26T15:24:58Z" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultUserSettingsSetUp -->
        <test-method signature="defaultUserSettingsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript@4738a206]" started-at="2025-06-26T15:24:58Z" name="defaultUserSettingsTest" data-provider="getDefaultUserSettingsData" finished-at="2025-06-26T15:24:58Z" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[defaultusersettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[defaultusersettings_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Default User Settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":2
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultUserSettingsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@729d991e]" started-at="2025-06-26T15:25:15Z" name="setup" finished-at="2025-06-26T15:25:15Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.MenuCreateTestScript.setup(MenuCreateTestScript.java:181)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createMenuUsigValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@729d991e]" started-at="2025-06-26T15:25:16Z" name="createMenuUsigValidInputData" data-provider="getMenuCreateData" finished-at="2025-06-26T15:25:16Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id":"3",
    "user_id":"11",
    "name":"Chicken tandoor",
    "food_type":"nonveg",
    "description":"this healthy food",
    "spicy_index":"2",
    "portion_data":[{"portion_name":"Half","price":100,"unit":"250g"},{"portion_name":"Full","price":180,"unit":"500g"}],
    "images":"C:\Users\hp\Downloads\menus\dal1.jpg",
    "ingredients":"dal,vegetables",
    "offer":"40 ",
    "rating":"5.0",
    "cgst":"5",
    "sgst":"10"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu created successfully",
    
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuUsigValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@729d991e]" started-at="2025-06-26T15:25:16Z" name="tearDown" finished-at="2025-06-26T15:25:16Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryCategoryListView">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryListView@3f6b0be5]" started-at="2025-06-26T15:24:54Z" name="setup" finished-at="2025-06-26T15:24:54Z" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getInventoryCategoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryListView@3f6b0be5]" started-at="2025-06-26T15:24:54Z" name="getInventoryCategoryList" data-provider="getInventoryCategoryListViewData" finished-at="2025-06-26T15:24:54Z" duration-ms="59" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycategorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Success",
    "categories": [
        {
            "inventory_category_id": 1,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 2,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 3,
            "name": "water"
        },
        {
            "inventory_category_id": 4,
            "name": "Farm"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in inventory category list view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in inventory category list view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryCategoryListView.getInventoryCategoryList(InventoryCategoryListView.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInventoryCategoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCategoryListView -->
      <class name="com.menumitratCommonAPITestScript.UdhariLedgerViewTestScript">
        <test-method is-config="true" signature="udhariLedgerViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerViewTestScript@26e356f0]" started-at="2025-06-26T15:25:26Z" name="udhariLedgerViewSetUp" finished-at="2025-06-26T15:25:26Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in Udhari Ledger View setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in Udhari Ledger View setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UdhariLedgerViewTestScript.udhariLedgerViewSetUp(UdhariLedgerViewTestScript.java:84)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerViewSetUp -->
        <test-method signature="udhariLedgerViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerViewTestScript@26e356f0]" started-at="2025-06-26T15:25:26Z" name="udhariLedgerViewTest" data-provider="getUdhariLedgerViewData" finished-at="2025-06-26T15:25:26Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[udhariledgerview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[udhariledgerview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify That Ledger List View Using Empty Ledger ID]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "ledger_id":1
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "ledger_details": {
    "ledger_id": 1,
    "customer_name": "cfv",
    "customer_mobile": "9898989898",
    "customer_address": "fvjdj",
    "order_id": 743,
    "order_number": "743",
    "bill_amount": 183.62,
    "udhari_datetime": "26-May-2025 08:17:55 AM",
    "settle_amount": 0.0,
    "settle_datetime": null,
    "pending_amount": 183.62,
    "ledger_status": "pending",
    "estimated_settlement_period": "1 week",
    "outlet_name": "Bhavani Hotelh",
    "outlet_id": 1,
    "order_created_on": "24-May-2025 11:05:51 AM",
    "order_status": "paid",
    "order_type": "dine-in",
    "final_grand_total": 183.62
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UdhariLedgerViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.StaffUpdateTestScript@49049a04]" started-at="2025-06-26T15:25:22Z" name="setup" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.StaffUpdateTestScript.setup(StaffUpdateTestScript.java:114)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateStaff(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffUpdateTestScript@49049a04]" started-at="2025-06-26T15:25:22Z" name="updateStaff" data-provider="getStaffUpdateData" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify update staff using valid input]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
         "user_id":2,
         "staff_id": 1,
        "outlet_id": 1,
        "name": "stafff one",
        "mobile":"7918232897",
        "address": "dfddd",
        "role": "receptionist",
        "dob": "2 Jul 2003",
        "aadhar_number": "321291198274",
        "photo": "C:\Users\hp\Downloads\menus\coca.jpg"
}             ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Staff updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateStaff -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.StaffUpdateTestScript@49049a04]" started-at="2025-06-26T15:25:22Z" name="tearDown" finished-at="2025-06-26T15:25:22Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SectionDeleteTestScript">
        <test-method is-config="true" signature="sectionDeleteSetup()[pri:0, instance:com.menumitratCommonAPITestScript.SectionDeleteTestScript@1af2d44a]" started-at="2025-06-26T15:24:58Z" name="sectionDeleteSetup" finished-at="2025-06-26T15:24:58Z" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionDeleteSetup -->
        <test-method signature="verifySectionDeleteUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.SectionDeleteTestScript@1af2d44a]" started-at="2025-06-26T15:24:59Z" name="verifySectionDeleteUsingValidInputData" data-provider="getSectionDeletePositiveInputData" finished-at="2025-06-26T15:24:59Z" duration-ms="81" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectiondelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectiondelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid user_id, outlet_id, and section_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2,
    "outlet_id": 1,
    "section_id":69,
  "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Outlet Section and associated tables deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during section delete verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during section delete verification
	at com.menumitratCommonAPITestScript.SectionDeleteTestScript.verifySectionDeleteUsingValidInputData(SectionDeleteTestScript.java:181)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionDeleteUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.SectionDeleteTestScript@1af2d44a]" started-at="2025-06-26T15:24:59Z" name="tearDown" finished-at="2025-06-26T15:24:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.SectionDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetFoodTypeList">
        <test-method is-config="true" signature="getFoodTypeListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetFoodTypeList@66f57048]" started-at="2025-06-26T15:25:17Z" name="getFoodTypeListSetUp" finished-at="2025-06-26T15:25:17Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get food type list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get food type list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetFoodTypeList.getFoodTypeListSetUp(GetFoodTypeList.java:92)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFoodTypeListSetUp -->
        <test-method signature="verifyFoodTypeList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetFoodTypeList@66f57048]" started-at="2025-06-26T15:25:18Z" name="verifyFoodTypeList" data-provider="getFoodTypeListData" finished-at="2025-06-26T15:25:18Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getfoodtypelist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getfoodtypelist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get food tyoe list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFoodTypeList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetFoodTypeList -->
      <class name="com.menumitratCommonAPITestScript.UbacFuctionalityCreateTestScript">
        <test-method is-config="true" signature="ubacCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UbacFuctionalityCreateTestScript@47e2e487]" started-at="2025-06-26T15:25:24Z" name="ubacCreateSetUp" finished-at="2025-06-26T15:25:24Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in UBAC create setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in UBAC create setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UbacFuctionalityCreateTestScript.ubacCreateSetUp(UbacFuctionalityCreateTestScript.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ubacCreateSetUp -->
        <test-method signature="ubacCreateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UbacFuctionalityCreateTestScript@47e2e487]" started-at="2025-06-26T15:25:25Z" name="ubacCreateTest" data-provider="getUbacCreateData" finished-at="2025-06-26T15:25:25Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ubaccreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ubaccreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "functionality_id":2,
    "user_id":2
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "User functionality created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ubacCreateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UbacFuctionalityCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableCreateTestScript@47987356]" started-at="2025-06-26T15:24:52Z" name="setup" finished-at="2025-06-26T15:24:52Z" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTableCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableCreateTestScript@47987356]" started-at="2025-06-26T15:24:52Z" name="verifyTableCreate" data-provider="getTableCreateData" finished-at="2025-06-26T15:24:52Z" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablecreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablecreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table create ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "section_id": 367,
    "user_id":2,
 "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Outlet table created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableCreate -->
      </class> <!-- com.menumitratCommonAPITestScript.TableCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.DefaultSettingTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@2fb3536e]" started-at="2025-06-26T15:24:50Z" name="setup" finished-at="2025-06-26T15:24:51Z" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="defaultSetting(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@2fb3536e]" started-at="2025-06-26T15:24:51Z" name="defaultSetting" data-provider="getDefaultSettingData" finished-at="2025-06-26T15:24:51Z" duration-ms="57" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[defaultsettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[defaultsettings001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Default Settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.DefaultSettingTestScript.defaultSetting(DefaultSettingTestScript.java:234)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultSetting -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@2fb3536e]" started-at="2025-06-26T15:24:51Z" name="tearDown" finished-at="2025-06-26T15:24:51Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.DefaultSettingTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffRoleListTestScript">
        <test-method is-config="true" signature="staffRoleListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffRoleListTestScript@7e7be63f]" started-at="2025-06-26T15:24:56Z" name="staffRoleListSetUp" finished-at="2025-06-26T15:24:57Z" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffRoleListSetUp -->
        <test-method signature="staffRoleListTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffRoleListTestScript@7e7be63f]" started-at="2025-06-26T15:24:57Z" name="staffRoleListTest" data-provider="getStaffRoleListData" finished-at="2025-06-26T15:24:57Z" duration-ms="68" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffrolelist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffrolelist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Staff role list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "role_list": [
        {
            "role_name": "cleaner",
            "staff_count": 0
        },
        {
            "role_name": "receptionist",
            "staff_count": 0
        },
        {
            "role_name": "all",
            "staff_count": 0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff role list test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff role list test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.StaffRoleListTestScript.staffRoleListTest(StaffRoleListTestScript.java:227)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffRoleListTest -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffRoleListTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateOutletTestScript">
        <test-method is-config="true" signature="updateOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@290222c1]" started-at="2025-06-26T15:25:21Z" name="updateOutletSetUp" finished-at="2025-06-26T15:25:21Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UpdateOutletTestScript.updateOutletSetUp(UpdateOutletTestScript.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOutletSetUp -->
        <test-method signature="verifyUpdateOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@290222c1]" started-at="2025-06-26T15:25:21Z" name="verifyUpdateOutlet" data-provider="getUpdateOutletData" finished-at="2025-06-26T15:25:21Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateoutlet_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify  update outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",         
    "name": "Bhavani Hotel",
    "outlet_type": "mess",
    "fssainumber": "12345678901239",
    "gstnumber": "354545ddede1237",
    "mobile": "6767679760",
    "veg_nonveg": "veg",
    "service_charges": "1",
    "gst": "1",
    "address": "satara, maharashtra",
    "is_open":true,
    "upi_id":"dd@ok",
    "website":"http://website",
    "whatsapp":"https://whatsapp",
    "facebook":"https://facebook",
    "instagram":"https://instagram",
    "google_business_link":"https://business.com",
    "google_review":"https://google-review"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet information updated successfully",
    "data": {
        "outlet_id": 1,
        "name": "Khana Khazana"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainListViewTestScript">
        <test-method is-config="true" signature="captainListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainListViewTestScript@35aea049]" started-at="2025-06-26T15:24:51Z" name="captainListViewSetUp" finished-at="2025-06-26T15:24:51Z" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainListViewSetUp -->
        <test-method signature="captainListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainListViewTestScript@35aea049]" started-at="2025-06-26T15:24:51Z" name="captainListViewTest" data-provider="getCaptainListViewData" finished-at="2025-06-26T15:24:52Z" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2,
 "outlet_id":1,
 "app_source":"captain_app"
}

]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Successfully retrieved captains",
  "data": [
    {
      "outlet_id": 1,
      "user_id": 106,
      "name": "ramucaptain",
      "mobile": "8945678989",
      "dob": "12 Jan 2023",
      "email": "h@gmail.com",
      "is_active": 1
    }
  ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@57cf54e1]" started-at="2025-06-26T15:25:10Z" name="setup" finished-at="2025-06-26T15:25:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ChefCreateTestScript.setup(ChefCreateTestScript.java:148)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@57cf54e1]" started-at="2025-06-26T15:25:10Z" name="createChef" data-provider="getChefCreateData" finished-at="2025-06-26T15:25:10Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   "update_user_id":"2",
    "outlet_id": "1",
    "name": "chef four ",
    "mobile":"8600890098",
    "address" : "",
    "aadhar_number": "123456789018",
    "dob":"",
    "email":""  }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Chef created successfully",
    "chef_id": 14
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefListViewTestScript">
        <test-method is-config="true" signature="chefListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChefListViewTestScript@6404f418]" started-at="2025-06-26T15:25:15Z" name="chefListViewSetUp" finished-at="2025-06-26T15:25:15Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.ChefListViewTestScript.chefListViewSetUp(ChefListViewTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefListViewSetUp -->
        <test-method signature="chefListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefListViewTestScript@6404f418]" started-at="2025-06-26T15:25:15Z" name="chefListViewTest" data-provider="getChefListViewData" finished-at="2025-06-26T15:25:15Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[cheflistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cheflistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef listview]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2,
    "outlet_id": "1",
    "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": [
    {
      "outlet_id": 1,
      "user_id": 68,
      "name": "etreeyeyty",
      "mobile": "8435794357",
      "dob": null,
      "email": null,
      "is_active": 1
    }
  ]
}
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetStaffRole">
        <test-method is-config="true" signature="getStaffRoleSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffRole@28f2a10f]" started-at="2025-06-26T15:24:44Z" name="getStaffRoleSetUp" finished-at="2025-06-26T15:24:45Z" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffRoleSetUp -->
        <test-method signature="verifyStaffRole(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffRole@28f2a10f]" started-at="2025-06-26T15:24:45Z" name="verifyStaffRole" data-provider="getStaffRoleData" finished-at="2025-06-26T15:24:45Z" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getstaffrole]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getstaffrole_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Staff Role]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffRole -->
      </class> <!-- com.menumitratCommonAPITestScript.GetStaffRole -->
      <class name="com.menumitratCommonAPITestScript.GetSupplierListTestScript">
        <test-method is-config="true" signature="supplierListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetSupplierListTestScript@1de5f259]" started-at="2025-06-26T15:25:15Z" name="supplierListSetUp" finished-at="2025-06-26T15:25:15Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get supplier list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get supplier list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetSupplierListTestScript.supplierListSetUp(GetSupplierListTestScript.java:96)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierListSetUp -->
        <test-method signature="getSupplierList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetSupplierListTestScript@1de5f259]" started-at="2025-06-26T15:25:15Z" name="getSupplierList" data-provider="getSupplierListData" finished-at="2025-06-26T15:25:15Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getsupplierlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getsupplierlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify get supplier list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   
    "outlet_id": "1"
  
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "Balaji": 1,
    "B Supplier": 2,
    "C Supplier": 4,
    "heena Supplier": 6
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSupplierList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetSupplierListTestScript -->
      <class name="com.menumitratCommonAPITestScript.TicketListViewTestScript">
        <test-method is-config="true" signature="ticketListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@54bff557]" started-at="2025-06-26T15:25:09Z" name="ticketListViewSetUp" finished-at="2025-06-26T15:25:09Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in ticket list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in ticket list view setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.TicketListViewTestScript.ticketListViewSetUp(TicketListViewTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewSetUp -->
        <test-method signature="ticketListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@54bff557]" started-at="2025-06-26T15:25:09Z" name="ticketListViewNegativeTest" data-provider="getTicketListViewNegativeData" finished-at="2025-06-26T15:25:09Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketlistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewNegativeTest -->
        <test-method signature="ticketListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@54bff557]" started-at="2025-06-26T15:25:09Z" name="ticketListViewTest" data-provider="getTicketListViewData" finished-at="2025-06-26T15:25:09Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Ticket List View]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket list of outlet 1",
    "tickets": [
        {
            "ticket_id": 2,
            "ticket_number": null,
            "title": "Issue with system",
            "status": "wip",
            "created_on": "02 May 2025 05:40 PM",
            "user_name": "Heena",
            "user_role": "owner"
        },
        {
            "ticket_id": 1,
            "ticket_number": null,
            "title": "Issue with system",
            "status": "open",
            "created_on": "02 May 2025 05:38 PM",
            "user_name": "Heena",
            "user_role": "owner"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TicketListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.PosDetailsTestScript">
        <test-method is-config="true" signature="posDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@593aaf41]" started-at="2025-06-26T15:25:09Z" name="posDetailsSetUp" finished-at="2025-06-26T15:25:09Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in pos details setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in pos details setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.PosDetailsTestScript.posDetailsSetUp(PosDetailsTestScript.java:91)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsSetUp -->
        <test-method signature="posDetailsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@593aaf41]" started-at="2025-06-26T15:25:09Z" name="posDetailsNegativeTest" data-provider="getPosDetailsNegativeData" finished-at="2025-06-26T15:25:09Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[posdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[posdetails_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verifyempty user id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":"101"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsNegativeTest -->
        <test-method signature="posDetailsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@593aaf41]" started-at="2025-06-26T15:25:09Z" name="posDetailsTest" data-provider="getPosDetailsData" finished-at="2025-06-26T15:25:09Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[posdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[posdetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify pos details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":2
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.PosDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefViewTestScript">
        <test-method is-config="true" signature="chefViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@7133da86]" started-at="2025-06-26T15:24:42Z" name="chefViewSetUp" finished-at="2025-06-26T15:24:42Z" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewSetUp -->
        <test-method signature="chefViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@7133da86]" started-at="2025-06-26T15:24:42Z" name="chefViewTest" data-provider="getChefViewData" finished-at="2025-06-26T15:24:43Z" duration-ms="119" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef view ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "update_user_id":2,
    "user_id":68,
    "outlet_id": 1,
    "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": {
    "outlet_id": 1,
    "user_id": 68,
    "name": "etreeyeyty",
    "mobile": "8435794357",
    "aadhar_number": "435435987495",
    "address": null,
    "dob": null,
    "email": null,
    "is_active": 1,
    "created_by": "owner",
    "created_on": "29 May 2025 12:28:31 PM",
    "updated_by": null,
    "updated_on": null,
    "functionalities": [
      {
        "functionality_id": 4,
        "functionality_name": "manage_table"
      }
    ]
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.ChefViewTestScript.chefViewTest(ChefViewTestScript.java:223)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.UdhariLedgerTestScript">
        <test-method is-config="true" signature="udhariLedgerSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerTestScript@61001b64]" started-at="2025-06-26T15:25:25Z" name="udhariLedgerSetUp" finished-at="2025-06-26T15:25:25Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in Udhari Ledger setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in Udhari Ledger setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.UdhariLedgerTestScript.udhariLedgerSetUp(UdhariLedgerTestScript.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerSetUp -->
        <test-method signature="udhariLedgerTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UdhariLedgerTestScript@61001b64]" started-at="2025-06-26T15:25:25Z" name="udhariLedgerTest" data-provider="getUdhariLedgerData" finished-at="2025-06-26T15:25:25Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[udhariledger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[udhariledger_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2,
    "customer_name": "Test",
    "customer_mobile": "9876543211",
    "customer_address": "123 Main Street, City",
    "order_id": 343,
    "bill_amount": 137.31,
    "estimated_settlement_period": "1 week"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Udhari ledger entry created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariLedgerTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UdhariLedgerTestScript -->
      <class name="com.menumitratCommonAPITestScript.CheckVersionTestScript">
        <test-method is-config="true" signature="checkVersionSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@5acf93bb]" started-at="2025-06-26T15:24:56Z" name="checkVersionSetUp" finished-at="2025-06-26T15:24:56Z" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionSetUp -->
        <test-method signature="checkVersionTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@5acf93bb]" started-at="2025-06-26T15:24:56Z" name="checkVersionTest" data-provider="getCheckVersionData" finished-at="2025-06-26T15:24:56Z" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkversion]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checkversion_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify check version ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "app_type": "pos"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "success": true,
    "detail": "Version retrieved successfully",
    "version": "1.0.0"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CheckVersionTestScript -->
      <class name="com.menumitratCommonAPITestScript.sectionUpdateTestScript">
        <test-method is-config="true" signature="sectionUpdateSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@169e6180]" started-at="2025-06-26T15:24:51Z" name="sectionUpdateSetup" finished-at="2025-06-26T15:24:51Z" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionUpdateSetup -->
        <test-method signature="verifySectionUpdateUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@169e6180]" started-at="2025-06-26T15:24:51Z" name="verifySectionUpdateUsingValidInputData" data-provider="getSectionUpdatePositiveInputData" finished-at="2025-06-26T15:24:51Z" duration-ms="58" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid section update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": 1,
    "section_id":17,
    "user_id":2,
    "section_name": "Family",
  "app_source":"owner_app"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Outlet Section updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[An error occurred during section update verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: An error occurred during section update verification
	at com.menumitratCommonAPITestScript.sectionUpdateTestScript.verifySectionUpdateUsingValidInputData(sectionUpdateTestScript.java:216)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionUpdateUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainDeleteTestScript@7205765b]" started-at="2025-06-26T15:24:52Z" name="setup" finished-at="2025-06-26T15:24:52Z" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteCaptain(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainDeleteTestScript@7205765b]" started-at="2025-06-26T15:24:52Z" name="deleteCaptain" data-provider="getCaptainDeleteData" finished-at="2025-06-26T15:24:52Z" duration-ms="64" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaindelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaindelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":2,
 "user_id":103,
 "outlet_id":1,
 "app_source":"captain_app"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Captain deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.CaptainDeleteTestScript.deleteCaptain(CaptainDeleteTestScript.java:235)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCaptain -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryViewTestScript">
        <test-method is-config="true" signature="menuCategoryViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@3b6ddd1d]" started-at="2025-06-26T15:24:53Z" name="menuCategoryViewSetUp" finished-at="2025-06-26T15:24:53Z" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewSetUp -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@3b6ddd1d]" started-at="2025-06-26T15:24:53Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-26T15:24:53Z" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id is non-numeric]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "abc", "menu_cat_id": "5" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@3b6ddd1d]" started-at="2025-06-26T15:24:53Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-26T15:24:53Z" duration-ms="64" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[menu_cat_id is non-numeric]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_cat_id": "xyz" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Menu category ID must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCategoryViewTestScript.menuCategoryViewNegativeTest(MenuCategoryViewTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@3b6ddd1d]" started-at="2025-06-26T15:24:53Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-26T15:24:53Z" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id is empty]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "menu_cat_id": "5" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@3b6ddd1d]" started-at="2025-06-26T15:24:53Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-26T15:24:53Z" duration-ms="90" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[menu_cat_id is empty]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_cat_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide menu_cat_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCategoryViewTestScript.menuCategoryViewNegativeTest(MenuCategoryViewTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="verifyMenuCategoryView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@3b6ddd1d]" started-at="2025-06-26T15:24:53Z" name="verifyMenuCategoryView" data-provider="getMenuCategoryViewData" finished-at="2025-06-26T15:24:53Z" duration-ms="87" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id": "5"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuCategoryViewTestScript.verifyMenuCategoryView(MenuCategoryViewTestScript.java:261)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.OrderPaymentSettleTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.OrderPaymentSettleTestScript@659499f1]" started-at="2025-06-26T15:25:23Z" name="setup" finished-at="2025-06-26T15:25:23Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.OrderPaymentSettleTestScript.setup(OrderPaymentSettleTestScript.java:137)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="orderPaymentSettle(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderPaymentSettleTestScript@659499f1]" started-at="2025-06-26T15:25:23Z" name="orderPaymentSettle" data-provider="getOrderPaymentSettleData" finished-at="2025-06-26T15:25:23Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderpaymentsettle]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderpaymentsettle_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "order_id": "47", 
  "payment_settle_type": "paid",
  "user_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Order payment settle type and status updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderPaymentSettle -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderPaymentSettleTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetMenuList">
        <test-method is-config="true" signature="menuListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetMenuList@3c7f66c4]" started-at="2025-06-26T15:25:12Z" name="menuListSetUp" finished-at="2025-06-26T15:25:12Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu list setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.GetMenuList.menuListSetUp(GetMenuList.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListSetUp -->
        <test-method signature="verifyMenuList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetMenuList@3c7f66c4]" started-at="2025-06-26T15:25:13Z" name="verifyMenuList" data-provider="getMenuListData" finished-at="2025-06-26T15:25:13Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getmenulist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getmenu_list_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Menu List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  
  "outlet_id": 1,
 "app_source":"owner_app"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "menu_list": {
    "Lemon Ricee": 14,
    "Fried Rice": 12,
    "Jeera Rice": 386,
    "Chicken biryani": 17,
    "testing menu": 51,
    "Chicken tandoor": 380,
    "CCVC": 105,
    "online ": 113,
    "chiken testing": 128,
    "testing": 333,
    "bgff": 341,
    "Test vtwo": 373,
    "White Sauce past with extra cheese": 381,
    "vfffdf": 383,
    "Momos": 390,
    "Pulav": 391,
    "Gddh": 392,
    "Pizza": 393
  }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetMenuList -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
